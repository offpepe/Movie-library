{"version":3,"sources":["services/apiRequests.js","context/userContext.js","context/userProvider.js","context/movieContext.js","context/movieProvider.js","components/MovieCardPreview.jsx","pages/CreateMovie.js","components/MovieCard.jsx","components/LoginForm.jsx","components/UserCard.jsx","components/LibraryHeader.jsx","pages/Library.js","pages/SignIn.js","pages/Credits.js","pages/NotFound.js","services/routes.js","App.js","reportWebVitals.js","index.js"],"names":["global","fetch","require","login","setToken","email","password","a","method","headers","body","JSON","stringify","log","json","token","localStorage","setItem","createAccount","formData","create","response","getUserByEmail","rawUser","user","getMovies","setter","movies","createNewMovie","newMovie","title","subtitle","genre","releaseDate","rate","description","cover","createdBy","createdAt","FormData","append","rawResult","result","validateToken","rawResponse","userContext","createContext","UserProvider","children","useState","setEmail","value","Provider","movieContext","MovieProvider","movieList","setMovieList","MovieCard","movie","setDispatch","submitNewMovie","alert","popOver","setPopOver","showAlert","setShowAlert","showInfo","setShowInfo","useEffect","setAlert","code","message","Alert","variant","onClose","dismissible","Heading","as","error","success","dispatchNewMovie","Card","style","width","className","Img","src","window","URL","createObjectURL","Body","Title","Subtitle","Text","Badge","pill","bg","onClick","fontSize","starCount","fluid","Button","Footer","CreateMovie","useContext","getItem","getUser","setNewMovie","dispatchCard","redirect","setRedirect","inputError","setInputError","setRate","movieGenres","fetchUser","userData","operation","setTimeout","date","Date","toLocaleDateString","Container","padding","textAlign","Form","onSubmit","ev","preventDefault","target","files","username","Label","Control","type","name","Select","map","max","min","onStarClick","height","to","id","_id","alt","color","LoginForm","err","setErr","showErr","setShowErr","location","reload","FormGroup","margin","placeholder","textDecoration","UserCard","loggout","emailHash","LibraryHeader","setUser","class","Dropdown","Toggle","Menu","clear","Library","checkToken","length","Spinner","animation","SignIn","errAlert","setErrAlert","paddingTop","insertedId","Credits","href","rel","NotFound","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18388bc0.chunk.js","sourcesContent":["global.fetch = require('cross-fetch');\n\n\nexport const login = async (setToken, email, password) => {\n    const log = await fetch('https://movie-library-api.herokuapp.com/users/login', {\n      method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password,\n        }),\n      });\n    const login = await log.json();\n    setToken(login.token);  \n    localStorage.setItem('token', login.token);\n    localStorage.setItem('email', email);\n    return login;\n  };\n\nexport const createAccount = async (formData) => {\n  const create = await fetch('https://movie-library-api.herokuapp.com/users/create', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(formData),\n  });\n  const response = await create.json();\n  return response;\n};\n\nexport const getUserByEmail = async (email) => {\n  const rawUser = await fetch(`https://movie-library-api.herokuapp.com/users/${email}`);\n  const user = await rawUser.json();\n  return user;\n};\n\nexport const getMovies = async (setter) => {\n  const { movies } = await (await fetch('https://movie-library-api.herokuapp.com/movies')).json();\n  setter(movies);\n};\n\nexport const createNewMovie = async (newMovie, token) => {\n    const { title, subtitle, genre, releaseDate, rate, description, cover, createdBy, createdAt } = newMovie;\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('subtitle', subtitle);\n    formData.append('genre', genre);\n    formData.append('releaseDate', releaseDate);\n    formData.append('rate', rate);\n    formData.append('description', description);\n    formData.append('createdAt', createdAt);\n    formData.append('createdBy', createdBy);\n    formData.append('cover', cover);\n    const rawResult = await fetch('https://movie-library-api.herokuapp.com/movies/create', {\n      method: 'POST',\n      headers: {\n        'Authorization': token,\n      },\n      body: formData,\n    });\n    const result = await rawResult.json();\n    return result;\n};\n\nexport const getMovieById = async (id, setter) => {\n  const movie = await (await fetch(`https://movie-library-api.herokuapp.com/movies/${id}`)).json();\n  setter(movie[0]);\n  return movie[0];\n};\n\nexport const updateMovie = async (id, token, updatedFields) => {\n  const rawResponse = await fetch(`https://movie-library-api.herokuapp.com/movies/update/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': token,\n    },\n    body: updatedFields,\n  });\n  const response = await rawResponse.json();\n  return response;\n};\n\nexport const deleteMovie = async (id, token) => {\n  const rawResponse = await fetch(`https://movie-library-api.herokuapp.com/movies/delete/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': token,\n    },\n  });\n  const response = await rawResponse.json();\n  return response;\n};\n\nexport const validateToken = async (token) => {\n  const rawResponse = await fetch(`https://movie-library-api.herokuapp.com/users/validate/${token}`);\n  const response = rawResponse.json();\n  return response;\n};","import { createContext } from 'react';\n\nconst userContext = createContext();\n\nexport default userContext;","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport userContext from './userContext';\n\nexport default function UserProvider ({ children }) {\n    const [email, setEmail] = useState('');\n    const [token, setToken] = useState('');\n    const value = {\n        email,\n        setEmail,\n        token,\n        setToken,\n    };\n    return (\n        <userContext.Provider value={ value } >\n            {\n                children\n            }\n        </userContext.Provider>   \n    );\n}\n\nUserProvider.propTypes = {\n    children: PropTypes.object.isRequired,\n}","import { createContext } from 'react';\n\nconst movieContext = createContext();\n\nexport default movieContext;","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport movieContext from './movieContext';\n\nexport default function MovieProvider ({ children }) {\n    const [movieList, setMovieList] = useState([]);  \n    const value = {\n        movieList,\n        setMovieList,\n    };\n    return (\n        <movieContext.Provider value={ value } >\n            {\n                children\n            }\n        </movieContext.Provider>   \n    );\n}\n\nMovieProvider.propTypes = {\n    children: PropTypes.object.isRequired,\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Button, Alert, Badge } from 'react-bootstrap';\nimport StarRatingComponent from 'react-star-rating-component';\n\n\nexport default function MovieCard({ movie, setDispatch, submitNewMovie, alert }) {\n  const [popOver, setPopOver] = useState()\n  const [showAlert, setShowAlert] = useState(false);\n  const [showInfo, setShowInfo] = useState(false);\n  const  { title, subtitle, genre, releaseDate, rate, description, cover, createdBy, createdAt } = movie;\n  useEffect(() => {\n    const setAlert = (response, code, message) => (\n      <Alert variant=\"danger\" onClose={ () => setShowAlert(false) } dismissible>\n        <Alert.Heading as=\"h3\">{ `${code} -> ${response}` }</Alert.Heading>\n        <p>\n          { message }\n        </p>\n      </Alert>\n    );\n    if(alert) {\n        setShowAlert(true);\n        if (alert.error) {\n          setPopOver(setAlert(alert.error, alert.code, alert.message));\n        } else if (alert.success) {\n          setPopOver(setAlert(alert.success, alert.code, alert.message));\n        }\n      }\n  }, [setPopOver, alert])\n  const dispatchNewMovie = async () => {\n    setPopOver('Loading...');\n    await submitNewMovie();\n  };\n\n  const toggleInfo = () => {\n    if (showInfo) {\n      setShowInfo(false);\n    } else {\n      setShowInfo(true);\n    }\n  }\n\n  return (\n      <Card style={ { width: '25rem' } } className=\"card-preview\">\n          <Card.Img\n            variant=\"top\"\n            src={ window.URL.createObjectURL(cover) }\n            className=\"card-preview-img\"\n            />\n          <Card.Body>\n              <Card.Title>{ title }</Card.Title>\n              <Card.Subtitle>{ subtitle }</Card.Subtitle>\n              <Card.Text>{ description }</Card.Text>\n              <Card.Body className=\"card-preview-info\">\n                <h4>\n                  <Badge pill bg=\"dark\">{ genre }</Badge>\n                </h4>\n                <i className=\"fas fa-question-circle\" onClick={ () => toggleInfo() } ></i>\n              </Card.Body>\n              <div style={ { fontSize: \"30px\"  } } >\n              <StarRatingComponent value={ rate } starCount={ 5 } />  \n              </div>\n              { showInfo && <div className=\"card-preview-more-info\">\n                <p> { `Data de Lançamento: ${releaseDate} `} </p>\n                <p> {`Filme adicionado por: ${ createdBy }`} </p>\n                <p> {`Adicionado em: ${ createdAt }` } </p>\n              </div> }\n          </Card.Body>\n          <Card.Body fluid=\"md\" className=\"card-preview-footer\">\n            <Button variant='success' onClick={ () => dispatchNewMovie() } > Adicionar </Button>\n            <Button variant='danger' onClick={ () => setDispatch() } > Cancelar </Button>\n          </Card.Body>\n          { showAlert && <Card.Footer className=\"card-preview-alert\">\n          { alert && popOver }\n          </Card.Footer> }\n      </Card>\n  );\n}\n\nMovieCard.propTypes = {\n  props: PropTypes.shape({\n    movie: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,    \n};","import React, { useContext, useEffect, useState } from 'react';\nimport { Container, Col as Row, Form, Button, Alert  } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport StarRatingComponent from 'react-star-rating-component';\nimport MovieCardPreview from '../components/MovieCardPreview';\nimport userContext from '../context/userContext';\nimport { createNewMovie, getUserByEmail } from '../services/apiRequests';\nimport './css/CreateMovie.css';\n\nexport default function CreateMovie () {\n    let { token, email } = useContext(userContext);\n    if (!token || !email) {\n      token = localStorage.getItem('token');\n      email = localStorage.getItem('email');\n    }\n    const [user, getUser] = useState({});\n    const [newMovie, setNewMovie] = useState({});\n    const [dispatchCard, setDispatch] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [alert, setAlert] = useState({});\n    const [inputError, setInputError] = useState(false);\n    const [rate, setRate] = useState(1);\n    const [movieGenres] = useState(['Animação', 'Comédia', 'Comédia Romântica', 'Ação', 'Policial', 'Documentário', 'Drama', 'Faroeste', 'Ficção Científica', 'Musical', 'Suspense', 'Terror / Horror']);\n    \n    useEffect(() => {\n      const fetchUser = async () => {\n        const userData = await getUserByEmail(email);\n        getUser(userData.result);\n      }\n      fetchUser();\n    },[email])\n    \n    const submitNewMovie = async () => {\n        const operation = await createNewMovie(newMovie, token);\n        setAlert(operation);\n        if(operation.success) {\n          setTimeout(() => setRedirect(true), 1000);\n        }\n    }\n\n    const closePreview = () => {\n        setDispatch(false);\n        setAlert({});\n    }\n\n    const date = new Date().toLocaleDateString(\"pt-BR\");\n\n    return (\n    <>\n      <Container className=\"create-movie-main\">\n        <div style={ { padding: '30px 0' } }>\n          <Row style={ { textAlign: 'center' } }>\n            <h1> Adicionar novo filme </h1>\n          </Row>\n          <Row className=\"create-movie-form\">\n              <Form onSubmit={ (ev) => {\n                  ev.preventDefault();\n                  const { title, subtitle, description, genre, releaseDate, rate, cover } = ev.target;\n                  if (!title.value || !subtitle.value || !genre.value || !releaseDate.value || !rate.value || !description.value || !cover.files[0]) {\n                      setInputError(true);\n                  } else {\n                  setNewMovie({\n                      title: title.value,\n                      subtitle: subtitle.value,\n                      genre: genre.value,\n                      releaseDate: releaseDate.value,\n                      rate: rate.value,\n                      description: description.value,\n                      cover: cover.files[0],\n                      createdBy: user.username,\n                      createdAt: date,\n                  });       \n                  setDispatch(true);\n                  }\n              } }>\n                  <Form.Label>\n                    <h4>Título</h4>\n                  </Form.Label>\n                  <Form.Control type=\"text\" name=\"title\"/>\n                  <Form.Label>\n                      <h4>Subtítulo</h4>\n                  </Form.Label>\n                  <Form.Control type=\"text\" name=\"subtitle\" />\n                  <Form.Label>\n                      <h4>Gênero</h4>\n                  </Form.Label>\n                  <Form.Select name=\"genre\">\n                    { movieGenres.map((genre) => <option value={ genre }>{ genre }</option>) }\n                  </Form.Select>\n                  <Form.Label>\n                      <h4>Data de lançamento</h4>\n                  </Form.Label>\n                  <Form.Control type=\"date\" name=\"releaseDate\" max={ date } min='1888-12-12' />\n                  <Form.Label> <h4>Avaliação</h4> </Form.Label>\n                  <Row style={ { fontSize: \"30px\" } }>\n                  <StarRatingComponent name=\"rate\" value={ rate } starCount={ 5 } onStarClick={ setRate } />\n                  </Row>\n                  <Form.Label>\n                  <h4>Descrição</h4>\n                  </Form.Label>\n                  <Form.Control as=\"textarea\" name=\"description\" style={{ height: '100px' }} />\n                  <Form.Label>\n                  <h4>Capa</h4>\n                  </Form.Label>\n                  <Form.Control type=\"file\" name=\"cover\" />\n                    <Button variant=\"secondary\" type=\"submit\"> Adicionar </Button>\n              </Form>\n          </Row>\n          { inputError  && <Alert variant=\"warning\" onClose={ () => setInputError   (false) } dismissible >\n              <Alert.Heading> Todos os campos precisam ser preenchidos </Alert.Heading>\n              </Alert>}\n        </div>\n      </Container>\n      { dispatchCard &&\n      <section className=\"card-preview-box\">\n         <MovieCardPreview\n           movie={ newMovie }\n           setDispatch={ closePreview }\n           submitNewMovie={ submitNewMovie }\n           alert={ alert } \n           />\n      </section>\n      }\n      { redirect && <Redirect to=\"/\" /> }\n    </> \n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport StarRatingComponent from 'react-star-rating-component';\n\nexport default function MovieCard({ movie }) {\n  const  { _id: id, title, rate, genre, cover } = movie;\n  return (\n    <>\n    { movie && <div className=\"card movie-card\">\n        <img src={ cover } alt={ `cover of ${title}` } />\n        <div className=\"card-content movie-card-content\">\n      <Link to={ `/${id}` }>\n          <div className=\"movie-card-content-data\">\n            <h4 className=\"title\" style={ { color: 'rgb(207, 204, 204)' } }>{ title }</h4>\n            <h6>{ genre }</h6>\n            <div>\n              <StarRatingComponent starCount={ rate } value={ rate } />\n            </div>\n          </div>\n      </Link>\n        </div>\n      </div> }\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  props: PropTypes.shape({\n    movie: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,    \n};","import React, { useState } from 'react';\nimport { Form, FormGroup, Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { login } from '../services/apiRequests';\n\nexport default function LoginForm ({ setToken, setEmail })  {\n  const [err, setErr] = useState({});\n  const [showErr, setShowErr] = useState(false);\n  \n  return (\n    <Form className=\"login-form\" onSubmit={ async (ev) => {\n      ev.preventDefault();\n      const { email, password } = ev.target;\n      const log = await login(setToken, email.value, password.value);\n      if (log.error) {\n        setErr(log);\n        setShowErr(true);\n      } else {\n        setEmail(email);\n        window.location.reload();\n      }\n      } }>\n        <FormGroup className=\"login-form-group\" style={ { margin: '10px 0' } } >\n        <p className=\"control has-icons-left has-icons-right\">\n         <Form.Control className=\"input\" type=\"email\" name=\"email\" placeholder=\"adalovelance@betrybe.com\" />\n         <span className=\"icon is-small is-left\">\n           <i className=\"fas fa-envelope\"></i>\n         </span>\n        <p style={ { fontSize: '10px', margin: '3px' } }><Link to=\"/login/signIn\" style={ { textDecoration: 'none' } }>Não possui conta? Clique aqui! </Link></p>\n        </p>\n        <p className=\"control has-icons-left has-icons-right\">\n         <Form.Control className=\"input\" type=\"password\" name=\"password\" placeholder=\"adalovelance@betrybe.com\" />\n         <span className=\"icon is-small is-left\">\n          <i className=\"fas fa-lock\"></i>\n         </span>\n         <p style={ { fontSize: '10px', margin: '3px'  } }><Link to=\"/login/reset\" style={ { textDecoration: 'none' } }> Esqueci minha senha </Link></p>\n        </p>\n        <span className=\"form-button-box\">\n        <Button variant=\"success\" type=\"submit\"> Logar </Button>\n        </span>\n        <div>\n        { showErr && <Alert\n        variant=\"danger\"\n        onClose={ () => setShowErr(false) }\n        style={ { width: '100%',\n          textAlign: 'center',\n         } }\n        dismissible\n        >\n          <Alert.Heading>{ `Erro ${err.code}` }</Alert.Heading>\n          <Alert.Heading>{ err.error }</Alert.Heading>\n          <p> { err.message } </p>\n        </Alert>}\n        </div>\n        </FormGroup>\n      </Form>\n    );\n}\n\nLoginForm.propTypes = {\n\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nexport default function UserCard ({ user, loggout }) {\n    return (\n    \n          <div className=\"card user-card\">\n              <figure className=\"image is-128x128\">\n                  <img src={ `https://www.gravatar.com/avatar/${user.emailHash}` } title=\"avatar provided by Gravatar\" alt=\"From Gravatar\" />\n              </figure>\n            <div className=\"card-content\" >\n             <h3 className=\"title is-5\" >{ user.username }</h3>\n             <p  className=\"title is-6\">{ user.email }</p>\n            </div>\n          <footer className=\"card-footer\">\n            <Button onClick={ () => loggout() } className=\"card-footer-item\" variant=\"danger\"> Sair </Button>\n          </footer>\n          </div>\n    );\n  }\n\nUserCard.propTypes = {\n  user: PropTypes.objectOf(PropTypes.string).isRequired,\n};","import React, { useContext, useEffect, useState } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport userContext from '../context/userContext';\nimport { getUserByEmail } from '../services/apiRequests';\nimport LoginForm from './LoginForm';\nimport UserCard from './UserCard';\n\nexport default function LibraryHeader () {\n  let { email, setToken, setEmail } = useContext(userContext);\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    const fetchUser = async () => {\n      const userData = await getUserByEmail(email);\n      setUser(userData.result);\n    }\n    fetchUser();\n  },[email]);\n  const loggout = () => {\n    setToken('');\n    setEmail('');\n    localStorage.clear();\n  };\n\n    return (\n        <header className=\"library-header\">\n            <div className=\"logo-conteiner\" style={ { color: 'yellow', fontSize: '30px' } }>\n                <i className=\"fas fa-play\" />\n            </div>\n            <div style={ { color: 'white' } } >\n                <h1> Movie Library </h1>\n            </div>\n            <nav className=\"button-group\">\n                { email && <Link to=\"/create\" style={ { textDecoration: 'none' } } >\n                  <h5 style={ { color: 'white' } }><i class=\"fas fa-plus\"/></h5>\n                </Link> }\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                    <h5 style={ { color: 'white' } }><i className=\"fas fa-user-circle\"/></h5>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu className=\"userMenu\">\n                { email && user ? <UserCard user={ user } loggout={ loggout } /> : <LoginForm setToken={ setToken } setEmail={ setEmail } /> }\n                  </Dropdown.Menu>\n                  </Dropdown> \n                  <Link to=\"/credits\" style={ { textDecoration: 'none' } } >\n                  <h5 style={ { color: 'white', fontSize: '40px' } }><i className=\"fas fa-info-circle\"></i></h5>\n                </Link> \n            </nav>\n        </header>\n    );\n}","import React, { useContext, useEffect } from 'react';\nimport { Container, Spinner } from 'react-bootstrap';\nimport movieContext from '../context/movieContext';\nimport { getMovies, validateToken } from '../services/apiRequests';\nimport MovieCard from '../components/MovieCard';\nimport './css/Library.css';\nimport LibraryHeader from '../components/LibraryHeader';\nimport userContext from '../context/userContext';\n\nexport default function Library () {\n    const { setToken, setEmail } = useContext(userContext);\n    const { movieList, setMovieList } = useContext(movieContext);\n    useEffect(() => {\n      const token = localStorage.getItem('token');\n      const email = localStorage.getItem('email');\n      const loggout = () => {\n        setToken();\n        setEmail();\n        localStorage.clear();\n        window.location.reload();\n      };\n      const checkToken = async () => {\n       const response = await validateToken(token);\n       if(!response.success) {\n        loggout();\n       } else {\n         setToken(token);\n         setEmail(email);\n       }\n      }\n      if(token) {\n        checkToken();\n      }\n      getMovies(setMovieList);\n    },[setEmail, setMovieList, setToken]);\n    return (\n      <>\n        <LibraryHeader />\n        <Container>\n          { movieList && movieList.length > 0 ? <div className=\"movie-card-group\">\n             { movieList.map((movie) => <MovieCard movie={ movie } />)}\n          </div>\n        :  <div className=\"spinner-box\" > <Spinner style={ { width: '8rem', height: '8rem' } } variant=\"danger\" animation=\"border\" /> </div> } \n        </Container>\n      </>\n      );\n}\n","import React, { useState } from 'react';\nimport { Button, Container, Form, Alert } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport { createAccount } from '../services/apiRequests';\nimport './css/SignIn.css';\n\nexport default function SignIn () {\n    const [redirect, setRedirect] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [errAlert, setErrAlert] = useState(<></>);\n\n    const setAlert = (response, code, message) => (\n        <Alert variant=\"danger\" onClose={ () => setShowAlert(false) } dismissible>\n          <Alert.Heading as=\"h3\">{ `${code} -> ${response}` }</Alert.Heading>\n          <p>\n            { message }\n          </p>\n        </Alert>\n      );\n        return (\n            <main className=\"sign-in-main\">\n                <Container className=\"sign-in-conteiner\" style={ { paddingTop: \"20px\" } }>\n                  <h1 style={ { textAlign: \"center\" } }> Criar usuário </h1>\n                  <Form onSubmit={ async (ev) => {\n                      ev.preventDefault();\n                      const { email, username, type, password } = ev.target;\n                      if (!email.value || !username.value || !type.value || !password.value) {\n                          alert('todos os campos precisam ser preenchidos');\n                      } else {\n                          const formData = {\n                            email: email.value,\n                            username: username.value,\n                            type: type.value,\n                            password: password.value,\n                          };\n                          const response = await createAccount(formData);\n                          if (response.error) {\n                            setErrAlert(setAlert(response.error, response.code, response.message));\n                            setShowAlert(true);\n                          } else {\n                            setErrAlert(\n                            <Alert variant=\"success\" onClose={ () => setShowAlert(false) }>\n                             <Alert.Heading>\n                                { response.success }\n                             </Alert.Heading>\n                             { `Id de criação: ${response.insertedId}` }\n                            </Alert>);\n                            setShowAlert(true);\n                            setTimeout(() => setRedirect(true), 500);\n                          }\n                      }\n                  } }>\n                      <Form.Label> <h5>E-mail</h5> </Form.Label>\n                      <Form.Control type=\"email\" name=\"email\" placeholder=\"linus_torvalds@windowsucks.gnu.com\"  />\n                      <Form.Label> <h5>Nome de usuário</h5> </Form.Label>\n                      <Form.Control type=\"text\" name=\"username\" placeholder=\"linus_gate_killer_69\" />\n                      <Form.Label> <h5>Tipo</h5> </Form.Label>\n                      <Form.Select name=\"type\">\n                      <option value=\"reader\"> Leitor </option>\n                      <option value=\"creator\"> Criador </option>\n                      <option value=\"admin\"> Administrador </option>\n                      </Form.Select>\n                      <Form.Label> <h5>Senha</h5> </Form.Label>\n                      <Form.Control type=\"password\" name=\"password\" />\n                      <div className=\"sign-in-buttonGroup\">\n                      <Button type=\"submit\" variant=\"success\"> Concluir </Button>\n                      <Button type=\"button\" onClick={ () => setRedirect(true) }> Voltar </Button>\n                      </div>\n                  </Form>\n                 { showAlert && errAlert  }\n                </Container>\n                { redirect && <Redirect to=\"/\" /> }\n            </main>\n        );\n}","import React from 'react';\nimport './css/Credits.css';\n\nexport default function Credits () {\n        return (\n            <main className=\"credits\">\n              <h1> Movie Library </h1>\n              <section className=\"credits-article\">\n                  <h5> Obrigado por testar minha aplicação ❤</h5>\n                  <article>\n                      Aplicação completamente feita por Alan Albuquerque Ferreira Lopes. Esta aplicação faz parte de um projeto com intuíto didático, chama-se Trybe NW+!\n                      Resumidamente, Trybe NW+ é onde farei todos os projetos da Trybe desde o Módulo de Front-End.\n                  </article>\n              </section>\n              <nav className=\"credits-contact\">\n                  <span><a href=\"https://www.linkedin.com/in/alanalbuquerq/\" target=\"_blank\" rel=\"noreferrer\">\n                      <i className=\"fab fa-linkedin-in\" />\n                    </a></span>\n                  <span><a href=\"http://github.com/offpepe/\" target=\"_blank\" rel=\"noreferrer\">\n                      <i className=\"fab fa-github\" />\n                  </a></span>\n              </nav>\n            </main>\n        );\n}\n\n ","import React from 'react';\nimport './css/NotFound.css'\n\nexport default function NotFound () {\n    return (\n        <main className=\"not-found-main\">\n            <h1><i class=\"fas fa-times-circle\"></i></h1>\n            <h2> Caminho não encontrado :\\ </h2>\n            <h4> Isto ocorre normalmente quando está perdido, mas pode ser falha do programador! </h4>\n            <h6> Caso acredite que seja uma falha, <a href=\"https://www.linkedin.com/in/alanalbuquerq/\" target=\"_blank\" rel=\"noreferrer\" >dê o feedback aqui!</a> </h6>\n        </main>\n    );\n}","import React from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport CreateMovie from '../pages/CreateMovie';\nimport Library from '../pages/Library';\nimport SignIn from '../pages/SignIn';\nimport Credits from '../pages/Credits';\nimport NotFound from '../pages/NotFound';\n\nexport default function Routes () {\n    return (\n        <Switch>\n            <Route exact path=\"/\"><Library /></Route>\n            <Route exact path=\"/signIn\"><SignIn /></Route>\n            <Route exact path=\"/create\"><CreateMovie /></Route>\n            <Route exact path=\"/credits\"><Credits /></Route>\n            <Route><NotFound /></Route>\n        </Switch>\n    );\n}","import React from 'react';\nimport Routes from './services/routes';\n\nexport default function App() {\n  return (\n          <Routes />\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport UserProvider from './context/userProvider';\nimport MovieProvider from './context/movieProvider';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <UserProvider>\n    <MovieProvider>\n     <BrowserRouter>\n       <App />\n      </BrowserRouter>\n    </MovieProvider>\n  </UserProvider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}