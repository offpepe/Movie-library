{"version":3,"sources":["services/apiRequests.js","context/userContext.js","context/userProvider.js","context/movieContext.js","context/movieProvider.js","pages/Login.js","components/UpdateDetailsForm.jsx","components/MovieDetails.jsx","pages/MovieDetails.js","components/MovieCardPreview.jsx","pages/CreateMovie.js","components/MovieCard.jsx","components/LoginForm.jsx","components/UserCard.jsx","components/LibraryHeader.jsx","pages/Library.js","pages/SignIn.js","pages/Credits.js","pages/NotFound.js","services/routes.js","App.js","reportWebVitals.js","index.js"],"names":["global","fetch","require","login","setToken","email","password","a","method","headers","body","JSON","stringify","log","json","token","localStorage","setItem","createAccount","formData","create","response","getUserByEmail","rawUser","user","getMovies","setter","movies","createNewMovie","newMovie","title","subtitle","genre","releaseDate","rate","description","cover","createdBy","createdAt","FormData","append","rawResult","result","getMovieById","id","movie","updateMovie","updatedFields","rawResponse","deleteMovie","validateToken","userContext","createContext","UserProvider","children","useState","setEmail","value","Provider","movieContext","MovieProvider","movieList","setMovieList","Login","userEmail","userSetEmail","userPassword","userSetPassword","showAlert","setShowAlert","alert","setAlert","redirect","setRedicrect","useContext","logIn","e","p","error","Alert","variant","code","message","success","setTimeout","Container","Col","Form","Group","controlId","Label","Control","type","placeholder","onChange","ev","target","Row","Check","label","Button","onClick","to","UpdateDetailsForm","submitFormData","setDetails","movieGenres","rating","setRating","date","Date","toLocaleDateString","className","onSubmit","preventDefault","newTitle","newSubtitle","newGenre","newReleaseDate","newRate","newDescription","newCover","files","name","size","Select","map","gen","max","min","starCount","onStarClick","as","style","height","MovieDetails","lastUpdate","showConfirmation","handleDelete","setConfirmation","showDelError","errorAlert","setDetailStatus","setUser","useEffect","fetchUser","userData","Card","display","src","alt","Title","Subtitle","Body","Text","ListGroup","Item","Badge","pill","username","margin","class","Header","Footer","getItem","getMovie","detailStatus","setErrorAlert","setShowDelErr","setRedirect","useParams","fetchApi","form","updated","onClose","dismissible","Heading","operation","setError","Spinner","width","animation","MovieCard","setDispatch","submitNewMovie","popOver","setPopOver","showInfo","setShowInfo","dispatchNewMovie","Img","window","URL","createObjectURL","bg","fontSize","fluid","CreateMovie","getUser","setNewMovie","dispatchCard","inputError","setInputError","setRate","padding","textAlign","_id","color","LoginForm","err","setErr","showErr","setShowErr","location","reload","FormGroup","textDecoration","UserCard","loggout","emailHash","LibraryHeader","Dropdown","Toggle","Menu","clear","Library","checkToken","length","SignIn","errAlert","setErrAlert","paddingTop","insertedId","Credits","href","rel","NotFound","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b387ef75.chunk.js","sourcesContent":["global.fetch = require('cross-fetch');\n\n\nexport const login = async (setToken, email, password) => {\n    const log = await fetch('https://movie-library-api.herokuapp.com/users/login', {\n      method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password,\n        }),\n      });\n    const login = await log.json();\n    setToken(login.token);  \n    localStorage.setItem('token', login.token);\n    localStorage.setItem('email', email);\n    return login;\n  };\n\nexport const createAccount = async (formData) => {\n  const create = await fetch('https://movie-library-api.herokuapp.com/users/create', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(formData),\n  });\n  const response = await create.json();\n  return response;\n};\n\nexport const getUserByEmail = async (email) => {\n  const rawUser = await fetch(`https://movie-library-api.herokuapp.com/users/${email}`);\n  const user = await rawUser.json();\n  return user;\n};\n\nexport const getMovies = async (setter) => {\n  const { movies } = await (await fetch('https://movie-library-api.herokuapp.com/movies')).json();\n  setter(movies);\n};\n\nexport const createNewMovie = async (newMovie, token) => {\n    const { title, subtitle, genre, releaseDate, rate, description, cover, createdBy, createdAt } = newMovie;\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('subtitle', subtitle);\n    formData.append('genre', genre);\n    formData.append('releaseDate', releaseDate);\n    formData.append('rate', rate);\n    formData.append('description', description);\n    formData.append('createdAt', createdAt);\n    formData.append('createdBy', createdBy);\n    formData.append('cover', cover);\n    const rawResult = await fetch('https://movie-library-api.herokuapp.com/movies/create', {\n      method: 'POST',\n      headers: {\n        'Authorization': token,\n      },\n      body: formData,\n    });\n    const result = await rawResult.json();\n    return result;\n};\n\nexport const getMovieById = async (id, setter) => {\n  const movie = await (await fetch(`https://movie-library-api.herokuapp.com/movies/${id}`)).json();\n  setter(movie[0]);\n  return movie[0];\n};\n\nexport const updateMovie = async (id, token, updatedFields) => {\n  const rawResponse = await fetch(`https://movie-library-api.herokuapp.com/movies/update/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': token,\n    },\n    body: updatedFields,\n  });\n  const response = await rawResponse.json();\n  return response;\n};\n\nexport const deleteMovie = async (id, token) => {\n  const rawResponse = await fetch(`https://movie-library-api.herokuapp.com/movies/delete/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': token,\n    },\n  });\n  const response = await rawResponse.json();\n  return response;\n};\n\nexport const validateToken = async (token) => {\n  const rawResponse = await fetch(`https://movie-library-api.herokuapp.com/users/validate/${token}`);\n  const response = rawResponse.json();\n  return response;\n};","import { createContext } from 'react';\n\nconst userContext = createContext();\n\nexport default userContext;","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport userContext from './userContext';\n\nexport default function UserProvider ({ children }) {\n    const [email, setEmail] = useState('');\n    const [token, setToken] = useState('');\n    const value = {\n        email,\n        setEmail,\n        token,\n        setToken,\n    };\n    return (\n        <userContext.Provider value={ value } >\n            {\n                children\n            }\n        </userContext.Provider>   \n    );\n}\n\nUserProvider.propTypes = {\n    children: PropTypes.object.isRequired,\n}","import { createContext } from 'react';\n\nconst movieContext = createContext();\n\nexport default movieContext;","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport movieContext from './movieContext';\n\nexport default function MovieProvider ({ children }) {\n    const [movieList, setMovieList] = useState([]);  \n    const value = {\n        movieList,\n        setMovieList,\n    };\n    return (\n        <movieContext.Provider value={ value } >\n            {\n                children\n            }\n        </movieContext.Provider>   \n    );\n}\n\nMovieProvider.propTypes = {\n    children: PropTypes.object.isRequired,\n}","import React, { useContext, useState } from 'react';\nimport { Container, Row, Col, Form, Button, Alert  } from 'react-bootstrap';\nimport userContext from '../context/userContext';\nimport { login } from '../services/apiRequests';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport default function Login () {\n    const [userEmail, userSetEmail] = useState('');\n    const [userPassword, userSetPassword] = useState('');\n    const [showAlert, setShowAlert] = useState(false);\n    const [alert, setAlert] = useState(<p> atenção: </p>);\n    const [redirect, setRedicrect] = useState(false); \n    const { setEmail, setToken } = useContext(userContext);\n\n    const logIn = async (e, p) => {\n      const log = await login(setToken, e, p);\n      if (log.error) {\n        setAlert(<Alert variant=\"danger\">\n            <h3>Erro: { log.error }</h3>\n            <p>Código: { log.code }</p>\n            <p>Mensagem: { log.message }</p>\n        </Alert>);\n        setShowAlert(true);\n      }\n      if (log.success) {\n        setAlert(<Alert variant=\"success\">\n          <p> { log.message }</p>\n        </Alert>);\n        setShowAlert(true);\n        setEmail(e);\n        setRedicrect(true);\n      }\n      setTimeout(() => {\n        setShowAlert(false)\n      }, 3000);\n    }\n        return (\n            <main>\n              <Container>\n                  <Col>\n                      <h1> Movie Library </h1>\n                      <Form>\n                          <Form.Group controlId=\"userLogin\">\n                              <Form.Label>\n                                  E-mail\n                              </Form.Label>\n                              <Form.Control\n                                type=\"email\"\n                                placeholder=\"ada_love_1815@betrybe.com\"\n                                onChange={ (ev) => userSetEmail(ev.target.value) }\n                              />\n                              <Form.Label> Password </Form.Label>\n                              <Form.Control\n                                type=\"password\"\n                                placeholder=\"Senha\"\n                                onChange={ (ev) => userSetPassword(ev.target.value) }\n                                />\n                          </Form.Group>\n                      </Form>\n                  </Col>\n                  <Row>\n                      <Form.Check type=\"checkbox\" label=\"Mantenha-me logado\" />\n                      <Button\n                        variant=\"outline-primary\"\n                        type=\"button\"\n                        onClick={ () => logIn(userEmail, userPassword) }\n                      >\n                        Login\n                      </Button>\n                      <Link to=\"login/signIn\"><p>Não possuo uma conta :\\ </p></Link>\n                  </Row>                      \n              </Container>\n              { showAlert && alert }\n              { redirect && <Redirect to=\"/movies\" /> }\n            </main>\n        );\n    }\n\n// Login.propTypes = {\n\n// };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport StarRatingComponent from 'react-star-rating-component';\n\nexport default function UpdateDetailsForm ({ submitFormData, setDetails, setAlert, movie: { title, subtitle, genre, releaseDate, rate, description } }) {\n  const [movieGenres] = useState(['Animação', 'Comédia', 'Comédia Romântica', 'Documentário', 'Drama', 'Faroeste', 'Ficção Científica', 'Musical', 'Suspense', 'Terror / Horror']);\n  const [rating, setRating] = useState(rate);\n\n  const date = new Date().toLocaleDateString(\"pt-BR\");\n\n  return (\n    <Container className=\"update-container\" >\n      <Form onSubmit={ (ev) => {\n        ev.preventDefault();\n        const { newTitle, newSubtitle, newGenre, newReleaseDate, newRate, newDescription, newCover } = ev.target;\n        const formData = new FormData();\n        formData.append('title', newTitle.value);\n        formData.append('subtitle', newSubtitle.value);\n        formData.append('genre', newGenre.value);\n        formData.append('releaseDate', newReleaseDate.value);\n        formData.append('rate', (newRate.value ? newRate.value : rate));\n        formData.append('description', newDescription.value);\n        formData.append('cover', newCover.files[0]);\n        formData.append('lastUpdate', date);\n        submitFormData(formData);\n      } } className=\"update-form\" >\n          <Form.Label>\n            <h3>Título</h3>\n          </Form.Label>\n            <Form.Control type=\"text\" name=\"newTitle\" value={ title } size=\"lg\" />\n          <Form.Label >\n              <h3>Subtítulo</h3>\n          </Form.Label>\n          <Form.Control type=\"text\" name=\"newSubtitle\" value={ subtitle } size=\"lg\" />\n          <Form.Label>\n            <h3> Gênero </h3>\n          </Form.Label>\n          <Form.Select name=\"newGenre\" value={ genre }>\n            { movieGenres.map((gen) => <option value={ gen }>{ gen }</option>) }\n          </Form.Select>\n          <Form.Label>\n            <h3> Data de lançamento </h3>\n          </Form.Label>\n          <Form.Control type=\"date\" name=\"newReleaseDate\" max={ date } min='1888-12-12' />\n          <Form.Label>\n            <h3>Avaliação</h3>\n          </Form.Label>\n          <div>\n          <StarRatingComponent name=\"newRate\" value={ rating } starCount={ 5 } onStarClick={ setRating } />\n          </div>\n          <Form.Label>\n              <h3>Descrição</h3>\n          </Form.Label>\n            <Form.Control as=\"textarea\" name=\"newDescription\" style={{ height: '100px' }} value={ description } />\n          <Form.Label>\n              <h3>Capa</h3>\n          </Form.Label>\n            <Form.Control type=\"file\" name=\"newCover\" size=\"lg\" />\n        <div className=\"update-btn\">\n          <Button variant=\"info\" type=\"submit\" size=\"lg\" >\n            Confirmar \n          </Button>\n          <Button variant=\"danger\" onClick={ () => {\n              setDetails('show')\n              setAlert(false);\n          } } size=\"lg\" >\n            Cancelar\n          </Button>\n        </div>\n      </Form>\n    </Container>      \n  );\n}\n\nUpdateDetailsForm.propTypes = {\n  props: PropTypes.shape({\n    submitFormData: PropTypes.func,\n    setDetails: PropTypes.func,\n    setAlert: PropTypes.func,\n  }).isRequired,\n};","import React, { useEffect, useState } from 'react';\nimport { Badge, Card, ListGroup, Button } from 'react-bootstrap';\nimport { getUserByEmail } from '../services/apiRequests';\nimport StarRatingComponent from 'react-star-rating-component';\nimport PropTypes from 'prop-types';\n\nexport default function MovieDetails ({ movie: { \n    title,\n    subtitle,\n    description,\n    rate,\n    releaseDate,\n    genre,\n    createdBy,\n    createdAt,\n    lastUpdate,\n    cover  },\n    showConfirmation,\n    email,\n    handleDelete,\n    setConfirmation,\n    showDelError,\n    errorAlert,\n    setDetailStatus\n     },) {\n      const [user, setUser] = useState({})\n      useEffect(() => {\n      const fetchUser = async () => {\n        const userData = await getUserByEmail(email);\n        setUser(userData.result);\n      };\n      fetchUser()\n    },[email])\n        return (\n            <>\n            <Card className=\"movie-details-info\">\n            <div style={ { display: 'flex' } }>\n            <section className=\"movie-details-figure\">\n              <img src={ cover } alt={ `Cover of movie ${title}` }  />\n            </section>\n            <section className=\"movie-details-movie-data\">\n              <Card.Title>{ title }</Card.Title>\n              <Card.Subtitle>{ subtitle }</Card.Subtitle>\n              <Card.Body>\n                <Card.Text>{ description }</Card.Text>\n              </Card.Body>\n              <ListGroup variant=\"info\">\n                <ListGroup.Item>{ `Data de lançamento: ${releaseDate}` }</ListGroup.Item>\n                <ListGroup.Item><h3><StarRatingComponent starCount={ rate } value={ rate } /></h3></ListGroup.Item>\n                <ListGroup.Item>{ lastUpdate ? `Ultima atualização: ${lastUpdate}` : `Postado em: ${createdAt}` }</ListGroup.Item>\n                <ListGroup.Item>{ `Criado por: ${createdBy}` }</ListGroup.Item>\n                <ListGroup.Item><h4><Badge pill variant=\"dark\">{ genre }</Badge></h4></ListGroup.Item>\n                { user && user.username === createdBy && <ListGroup.Item>\n                  <Button style={ { margin: '0 5px' } } variant=\"outline-primary\" size=\"lg\" onClick={ () => setDetailStatus('update') }>\n                  <i class=\"far fa-edit\"></i>\n                  </Button>\n                  <Button style={ { margin: '0 5px' } } onClick={ () => setConfirmation(true) } variant=\"outline-danger\" size=\"lg\">\n                  <i class=\"far fa-trash-alt\"></i>\n                  </Button>\n                </ListGroup.Item>\n                }\n              </ListGroup>\n              { showConfirmation &&\n                <section className=\"delete-box\" >\n                  <Card className=\"delete-card\" >\n                  <Card.Header className=\"delete-card-header\">\n                  <Card.Title> Está certo em deletar este filme? </Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                  <Card.Subtitle> Esta operação é irreversível! </Card.Subtitle>\n                  </Card.Body>\n                  { <Card.Footer className=\"delete-card-footer\">\n                    <Button onClick={ () => handleDelete() } variant=\"danger\"> Sim </Button>\n                    <Button onClick={ () => setConfirmation(false) }  variant=\"info\"> Não </Button>\n                  </Card.Footer>}\n                  { showDelError && errorAlert }\n              </Card> \n            </section>}\n            </section>\n            </div>\n            </Card>\n            </>\n        );\n}\n\nMovieDetails.propTypes = {\n  props: PropTypes.shape({\n    movie: PropTypes.objectOf(PropTypes.string),\n    cover: PropTypes.object,\n    showConfirmation: PropTypes.func,\n    email: PropTypes.string,\n    handleDelete: PropTypes.func,\n    setConfirmation: PropTypes.func,\n    showDelError: PropTypes.func,\n    errorAlert: PropTypes.func,\n    setDetailStatus: PropTypes.func,\n    }).isRequired,    \n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Alert, Spinner } from 'react-bootstrap'; \nimport { useParams, Redirect } from 'react-router-dom'\nimport UpdateDetailsForm from '../components/UpdateDetailsForm';\nimport userContext from '../context/userContext';\nimport MovieDetailsComponent from '../components/MovieDetails';\nimport { deleteMovie, getMovieById, updateMovie } from '../services/apiRequests';\nimport './css/MovieDetails.css';\n\nexport default function MovieDetails () {\n    let { token, email } = useContext(userContext);\n    if (!token) {\n      token = localStorage.getItem('token');\n      email = localStorage.getItem('email');\n    }\n    const [movie, getMovie] = useState({});\n    const [detailStatus, setDetailStatus] = useState('show')\n    const [showAlert, setShowAlert] = useState(false);\n    const [showConfirmation, setConfirmation] = useState(false)\n    const [errorAlert, setErrorAlert] = useState(<></>);\n    const [showDelError, setShowDelErr] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const { id }= useParams();\n    useEffect(() => {\n      const fetchApi = async () => await getMovieById(id, getMovie); \n      fetchApi();\n    },[id]);\n    const setAlert = (response, code, message) => (\n      <div className=\"error-popup\">\n        <Alert variant=\"danger\" onClose={ () => setShowAlert(false) } dismissible>\n          <Alert.Heading as=\"h3\">{ `${code} -> ${response}` }</Alert.Heading>\n          <p>\n            { message }\n          </p>\n        </Alert>\n      </div>\n      );\n\n      const setDelAlert = (response, code, message) => (\n        <Alert variant=\"danger\" onClose={ () => setShowDelErr(false) } dismissible>\n          <Alert.Heading as=\"h3\">{ `${code} -> ${response}` }</Alert.Heading>\n          <p>\n            { message }\n          </p>\n        </Alert>\n      );\n      \n    const submitFormData = async (form) => {\n      const updated = await updateMovie(id, token, form);\n      if(updated.success) {\n        getMovie(updated.result);\n        setDetailStatus('show');\n      }\n      if(updated.error) {\n        setErrorAlert(setAlert(updated.error, updated.code, updated.message));\n          setShowAlert(true);\n      }\n    }\n\n    const handleDelete = async () => {\n      const operation = await deleteMovie(id, token);\n      if (operation.error) {\n        setErrorAlert(setDelAlert(operation.error, operation.code, operation.message));\n        setShowDelErr(true);\n      } else {\n        setErrorAlert(<Alert variant=\"success\">{ operation.success }</Alert>)\n        setShowDelErr(true);\n        setTimeout(() => setRedirect(true), 400);\n      }\n    }\n\n    return (\n      <>\n      { movie ?  \n        <main className=\"details-main\">\n        { detailStatus === 'show' ? <>\n          <main className=\"movie-details\">\n            <MovieDetailsComponent\n              movie={ movie }\n              showConfirmation={ showConfirmation }\n              email={ email }\n              handleDelete={ handleDelete }\n              setConfirmation={ setConfirmation }\n              showDelError={ showDelError }\n              errorAlert={ errorAlert }\n              setDetailStatus={ setDetailStatus }\n              />\n          </main>\n            </>: <UpdateDetailsForm\n              submitFormData={ submitFormData }\n              setDetails={ setDetailStatus }\n              setAlert={ setShowAlert }\n              setError={ setErrorAlert }\n              movie={ movie }\n              /> }\n            { showAlert && errorAlert }\n            { redirect && <Redirect to=\"/movies\" /> }\n        </main> :  <div className=\"spinner-box\" > <Spinner style={ { width: '8rem', height: '8rem' } } variant=\"danger\" animation=\"border\" /> </div> }\n      </>\n        );\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Button, Alert, Badge } from 'react-bootstrap';\nimport StarRatingComponent from 'react-star-rating-component';\n\n\nexport default function MovieCard({ movie, setDispatch, submitNewMovie, alert }) {\n  const [popOver, setPopOver] = useState()\n  const [showAlert, setShowAlert] = useState(false);\n  const [showInfo, setShowInfo] = useState(false);\n  const  { title, subtitle, genre, releaseDate, rate, description, cover, createdBy, createdAt } = movie;\n  useEffect(() => {\n    const setAlert = (response, code, message) => (\n      <Alert variant=\"danger\" onClose={ () => setShowAlert(false) } dismissible>\n        <Alert.Heading as=\"h3\">{ `${code} -> ${response}` }</Alert.Heading>\n        <p>\n          { message }\n        </p>\n      </Alert>\n    );\n    if(alert) {\n        setShowAlert(true);\n        if (alert.error) {\n          setPopOver(setAlert(alert.error, alert.code, alert.message));\n        } else if (alert.success) {\n          setPopOver(setAlert(alert.success, alert.code, alert.message));\n        }\n      }\n  }, [setPopOver, alert])\n  const dispatchNewMovie = async () => {\n    setPopOver('Loading...');\n    await submitNewMovie();\n  };\n\n  const toggleInfo = () => {\n    if (showInfo) {\n      setShowInfo(false);\n    } else {\n      setShowInfo(true);\n    }\n  }\n\n  return (\n      <Card style={ { width: '25rem' } } className=\"card-preview\">\n          <Card.Img\n            variant=\"top\"\n            src={ window.URL.createObjectURL(cover) }\n            className=\"card-preview-img\"\n            />\n          <Card.Body>\n              <Card.Title>{ title }</Card.Title>\n              <Card.Subtitle>{ subtitle }</Card.Subtitle>\n              <Card.Text>{ description }</Card.Text>\n              <Card.Body className=\"card-preview-info\">\n                <h4>\n                  <Badge pill bg=\"dark\">{ genre }</Badge>\n                </h4>\n                <i className=\"fas fa-question-circle\" onClick={ () => toggleInfo() } ></i>\n              </Card.Body>\n              <div style={ { fontSize: \"30px\"  } } >\n              <StarRatingComponent value={ rate } starCount={ 5 } />  \n              </div>\n              { showInfo && <div className=\"card-preview-more-info\">\n                <p> { `Data de Lançamento: ${releaseDate} `} </p>\n                <p> {`Filme adicionado por: ${ createdBy }`} </p>\n                <p> {`Adicionado em: ${ createdAt }` } </p>\n              </div> }\n          </Card.Body>\n          <Card.Body fluid=\"md\" className=\"card-preview-footer\">\n            <Button variant='success' onClick={ () => dispatchNewMovie() } > Adicionar </Button>\n            <Button variant='danger' onClick={ () => setDispatch() } > Cancelar </Button>\n          </Card.Body>\n          { showAlert && <Card.Footer className=\"card-preview-alert\">\n          { alert && popOver }\n          </Card.Footer> }\n      </Card>\n  );\n}\n\nMovieCard.propTypes = {\n  props: PropTypes.shape({\n    movie: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,    \n};","import React, { useContext, useEffect, useState } from 'react';\nimport { Container, Col as Row, Form, Button, Alert  } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport StarRatingComponent from 'react-star-rating-component';\nimport MovieCardPreview from '../components/MovieCardPreview';\nimport userContext from '../context/userContext';\nimport { createNewMovie, getUserByEmail } from '../services/apiRequests';\nimport './css/CreateMovie.css';\n\nexport default function CreateMovie () {\n    let { token, email } = useContext(userContext);\n    if (!token || !email) {\n      token = localStorage.getItem('token');\n      email = localStorage.getItem('email');\n    }\n    const [user, getUser] = useState({});\n    const [newMovie, setNewMovie] = useState({});\n    const [dispatchCard, setDispatch] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [alert, setAlert] = useState({});\n    const [inputError, setInputError] = useState(false);\n    const [rate, setRate] = useState(1);\n    const [movieGenres] = useState(['Animação', 'Comédia', 'Comédia Romântica', 'Ação', 'Policial', 'Documentário', 'Drama', 'Faroeste', 'Ficção Científica', 'Musical', 'Suspense', 'Terror / Horror']);\n    \n    useEffect(() => {\n      const fetchUser = async () => {\n        const userData = await getUserByEmail(email);\n        getUser(userData.result);\n      }\n      fetchUser();\n    },[email])\n    \n    const submitNewMovie = async () => {\n        const operation = await createNewMovie(newMovie, token);\n        setAlert(operation);\n        if(operation.success) {\n          setTimeout(() => setRedirect(true), 1000);\n        }\n    }\n\n    const closePreview = () => {\n        setDispatch(false);\n        setAlert({});\n    }\n\n    const date = new Date().toLocaleDateString(\"pt-BR\");\n\n    return (\n    <>\n      <Container className=\"create-movie-main\">\n        <div style={ { padding: '30px 0' } }>\n          <Row style={ { textAlign: 'center' } }>\n            <h1> Adicionar novo filme </h1>\n          </Row>\n          <Row className=\"create-movie-form\">\n              <Form onSubmit={ (ev) => {\n                  ev.preventDefault();\n                  const { title, subtitle, description, genre, releaseDate, rate, cover } = ev.target;\n                  if (!title.value || !subtitle.value || !genre.value || !releaseDate.value || !rate.value || !description.value || !cover.files[0]) {\n                      setInputError(true);\n                  } else {\n                  setNewMovie({\n                      title: title.value,\n                      subtitle: subtitle.value,\n                      genre: genre.value,\n                      releaseDate: releaseDate.value,\n                      rate: rate.value,\n                      description: description.value,\n                      cover: cover.files[0],\n                      createdBy: user.username,\n                      createdAt: date,\n                  });       \n                  setDispatch(true);\n                  }\n              } }>\n                  <Form.Label>\n                    <h4>Título</h4>\n                  </Form.Label>\n                  <Form.Control type=\"text\" name=\"title\"/>\n                  <Form.Label>\n                      <h4>Subtítulo</h4>\n                  </Form.Label>\n                  <Form.Control type=\"text\" name=\"subtitle\" />\n                  <Form.Label>\n                      <h4>Gênero</h4>\n                  </Form.Label>\n                  <Form.Select name=\"genre\">\n                    { movieGenres.map((genre) => <option value={ genre }>{ genre }</option>) }\n                  </Form.Select>\n                  <Form.Label>\n                      <h4>Data de lançamento</h4>\n                  </Form.Label>\n                  <Form.Control type=\"date\" name=\"releaseDate\" max={ date } min='1888-12-12' />\n                  <Form.Label> <h4>Avaliação</h4> </Form.Label>\n                  <Row style={ { fontSize: \"30px\" } }>\n                  <StarRatingComponent name=\"rate\" value={ rate } starCount={ 5 } onStarClick={ setRate } />\n                  </Row>\n                  <Form.Label>\n                  <h4>Descrição</h4>\n                  </Form.Label>\n                  <Form.Control as=\"textarea\" name=\"description\" style={{ height: '100px' }} />\n                  <Form.Label>\n                  <h4>Capa</h4>\n                  </Form.Label>\n                  <Form.Control type=\"file\" name=\"cover\" />\n                    <Button variant=\"secondary\" type=\"submit\"> Adicionar </Button>\n              </Form>\n          </Row>\n          { inputError  && <Alert variant=\"warning\" onClose={ () => setInputError   (false) } dismissible >\n              <Alert.Heading> Todos os campos precisam ser preenchidos </Alert.Heading>\n              </Alert>}\n        </div>\n      </Container>\n      { dispatchCard &&\n      <section className=\"card-preview-box\">\n         <MovieCardPreview\n           movie={ newMovie }\n           setDispatch={ closePreview }\n           submitNewMovie={ submitNewMovie }\n           alert={ alert } \n           />\n      </section>\n      }\n      { redirect && <Redirect to=\"/movies\" /> }\n    </> \n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport StarRatingComponent from 'react-star-rating-component';\n\nexport default function MovieCard({ movie }) {\n  const  { _id: id, title, rate, genre, cover } = movie;\n  return (\n    <>\n    { movie && <div className=\"card movie-card\">\n        <img src={ cover } alt={ `cover of ${title}` } />\n        <div className=\"card-content movie-card-content\">\n      <Link to={ `/${id}` }>\n          <div className=\"movie-card-content-data\">\n            <h4 className=\"title\" style={ { color: 'rgb(207, 204, 204)' } }>{ title }</h4>\n            <h6>{ genre }</h6>\n            <div>\n              <StarRatingComponent starCount={ rate } value={ rate } />\n            </div>\n          </div>\n      </Link>\n        </div>\n      </div> }\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  props: PropTypes.shape({\n    movie: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,    \n};","import React, { useState } from 'react';\nimport { Form, FormGroup, Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { login } from '../services/apiRequests';\n\nexport default function LoginForm ({ setToken, setEmail })  {\n  const [err, setErr] = useState({});\n  const [showErr, setShowErr] = useState(false);\n  \n  return (\n    <Form className=\"login-form\" onSubmit={ async (ev) => {\n      ev.preventDefault();\n      const { email, password } = ev.target;\n      const log = await login(setToken, email.value, password.value);\n      if (log.error) {\n        setErr(log);\n        setShowErr(true);\n      } else {\n        setEmail(email);\n        window.location.reload();\n      }\n      } }>\n        <FormGroup className=\"login-form-group\" style={ { margin: '10px 0' } } >\n        <p className=\"control has-icons-left has-icons-right\">\n         <Form.Control className=\"input\" type=\"email\" name=\"email\" placeholder=\"adalovelance@betrybe.com\" />\n         <span className=\"icon is-small is-left\">\n           <i className=\"fas fa-envelope\"></i>\n         </span>\n        <p style={ { fontSize: '10px', margin: '3px' } }><Link to=\"/login/signIn\" style={ { textDecoration: 'none' } }>Não possui conta? Clique aqui! </Link></p>\n        </p>\n        <p className=\"control has-icons-left has-icons-right\">\n         <Form.Control className=\"input\" type=\"password\" name=\"password\" placeholder=\"adalovelance@betrybe.com\" />\n         <span className=\"icon is-small is-left\">\n          <i className=\"fas fa-lock\"></i>\n         </span>\n         <p style={ { fontSize: '10px', margin: '3px'  } }><Link to=\"/login/reset\" style={ { textDecoration: 'none' } }> Esqueci minha senha </Link></p>\n        </p>\n        <span className=\"form-button-box\">\n        <Button variant=\"success\" type=\"submit\"> Logar </Button>\n        </span>\n        <div>\n        { showErr && <Alert\n        variant=\"danger\"\n        onClose={ () => setShowErr(false) }\n        style={ { width: '100%',\n          textAlign: 'center',\n         } }\n        dismissible\n        >\n          <Alert.Heading>{ `Erro ${err.code}` }</Alert.Heading>\n          <Alert.Heading>{ err.error }</Alert.Heading>\n          <p> { err.message } </p>\n        </Alert>}\n        </div>\n        </FormGroup>\n      </Form>\n    );\n}\n\nLoginForm.propTypes = {\n\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nexport default function UserCard ({ user, loggout }) {\n    return (\n    \n          <div className=\"card user-card\">\n              <figure className=\"image is-128x128\">\n                  <img src={ `https://www.gravatar.com/avatar/${user.emailHash}` } title=\"avatar provided by Gravatar\" alt=\"From Gravatar\" />\n              </figure>\n            <div className=\"card-content\" >\n             <h3 className=\"title is-5\" >{ user.username }</h3>\n             <p  className=\"title is-6\">{ user.email }</p>\n            </div>\n          <footer className=\"card-footer\">\n            <Button onClick={ () => loggout() } className=\"card-footer-item\" variant=\"danger\"> Sair </Button>\n          </footer>\n          </div>\n    );\n  }\n\nUserCard.propTypes = {\n  user: PropTypes.objectOf(PropTypes.string).isRequired,\n};","import React, { useContext, useEffect, useState } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport userContext from '../context/userContext';\nimport { getUserByEmail } from '../services/apiRequests';\nimport LoginForm from './LoginForm';\nimport UserCard from './UserCard';\n\nexport default function LibraryHeader () {\n  let { email, setToken, setEmail } = useContext(userContext);\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    const fetchUser = async () => {\n      const userData = await getUserByEmail(email);\n      setUser(userData.result);\n    }\n    fetchUser();\n  },[email]);\n  const loggout = () => {\n    setToken('');\n    setEmail('');\n    localStorage.clear();\n  };\n\n    return (\n        <header className=\"library-header\">\n            <div className=\"logo-conteiner\" style={ { color: 'yellow', fontSize: '30px' } }>\n                <i className=\"fas fa-play\" />\n            </div>\n            <div style={ { color: 'white' } } >\n                <h1> Movie Library </h1>\n            </div>\n            <nav className=\"button-group\">\n                { email && <Link to=\"/create\" style={ { textDecoration: 'none' } } >\n                  <h5 style={ { color: 'white' } }><i class=\"fas fa-plus\"/></h5>\n                </Link> }\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                    <h5 style={ { color: 'white' } }><i className=\"fas fa-user-circle\"/></h5>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu className=\"userMenu\">\n                { email && user ? <UserCard user={ user } loggout={ loggout } /> : <LoginForm setToken={ setToken } setEmail={ setEmail } /> }\n                  </Dropdown.Menu>\n                  </Dropdown> \n                  <Link to=\"/credits\" style={ { textDecoration: 'none' } } >\n                  <h5 style={ { color: 'white', fontSize: '40px' } }><i className=\"fas fa-info-circle\"></i></h5>\n                </Link> \n            </nav>\n        </header>\n    );\n}","import React, { useContext, useEffect } from 'react';\nimport { Container, Spinner } from 'react-bootstrap';\nimport movieContext from '../context/movieContext';\nimport { getMovies, validateToken } from '../services/apiRequests';\nimport MovieCard from '../components/MovieCard';\nimport './css/Library.css';\nimport LibraryHeader from '../components/LibraryHeader';\nimport userContext from '../context/userContext';\n\nexport default function Library () {\n    const { setToken, setEmail } = useContext(userContext);\n    const { movieList, setMovieList } = useContext(movieContext);\n    useEffect(() => {\n      const token = localStorage.getItem('token');\n      const email = localStorage.getItem('email');\n      const loggout = () => {\n        setToken();\n        setEmail();\n        localStorage.clear();\n        window.location.reload();\n      };\n      const checkToken = async () => {\n       const response = await validateToken(token);\n       if(!response.success) {\n        loggout();\n       } else {\n         setToken(token);\n         setEmail(email);\n       }\n      }\n      if(token) {\n        checkToken();\n      }\n      getMovies(setMovieList);\n    },[setEmail, setMovieList, setToken]);\n    return (\n      <>\n        <LibraryHeader />\n        <Container>\n          { movieList && movieList.length > 0 ? <div className=\"movie-card-group\">\n             { movieList.map((movie) => <MovieCard movie={ movie } />)}\n          </div>\n        :  <div className=\"spinner-box\" > <Spinner style={ { width: '8rem', height: '8rem' } } variant=\"danger\" animation=\"border\" /> </div> } \n        </Container>\n      </>\n      );\n}\n","import React, { useState } from 'react';\nimport { Button, Container, Form, Alert } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport { createAccount } from '../services/apiRequests';\nimport './css/SignIn.css';\n\nexport default function SignIn () {\n    const [redirect, setRedirect] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [errAlert, setErrAlert] = useState(<></>);\n\n    const setAlert = (response, code, message) => (\n        <Alert variant=\"danger\" onClose={ () => setShowAlert(false) } dismissible>\n          <Alert.Heading as=\"h3\">{ `${code} -> ${response}` }</Alert.Heading>\n          <p>\n            { message }\n          </p>\n        </Alert>\n      );\n        return (\n            <main className=\"sign-in-main\">\n                <Container className=\"sign-in-conteiner\" style={ { paddingTop: \"20px\" } }>\n                  <h1 style={ { textAlign: \"center\" } }> Criar usuário </h1>\n                  <Form onSubmit={ async (ev) => {\n                      ev.preventDefault();\n                      const { email, username, type, password } = ev.target;\n                      if (!email.value || !username.value || !type.value || !password.value) {\n                          alert('todos os campos precisam ser preenchidos');\n                      } else {\n                          const formData = {\n                            email: email.value,\n                            username: username.value,\n                            type: type.value,\n                            password: password.value,\n                          };\n                          const response = await createAccount(formData);\n                          if (response.error) {\n                            setErrAlert(setAlert(response.error, response.code, response.message));\n                            setShowAlert(true);\n                          } else {\n                            setErrAlert(\n                            <Alert variant=\"success\" onClose={ () => setShowAlert(false) }>\n                             <Alert.Heading>\n                                { response.success }\n                             </Alert.Heading>\n                             { `Id de criação: ${response.insertedId}` }\n                            </Alert>);\n                            setShowAlert(true);\n                            setTimeout(() => setRedirect(true), 500);\n                          }\n                      }\n                  } }>\n                      <Form.Label> <h5>E-mail</h5> </Form.Label>\n                      <Form.Control type=\"email\" name=\"email\" placeholder=\"linus_torvalds@windowsucks.gnu.com\"  />\n                      <Form.Label> <h5>Nome de usuário</h5> </Form.Label>\n                      <Form.Control type=\"text\" name=\"username\" placeholder=\"linus_gate_killer_69\" />\n                      <Form.Label> <h5>Tipo</h5> </Form.Label>\n                      <Form.Select name=\"type\">\n                      <option value=\"reader\"> Leitor </option>\n                      <option value=\"creator\"> Criador </option>\n                      <option value=\"admin\"> Administrador </option>\n                      </Form.Select>\n                      <Form.Label> <h5>Senha</h5> </Form.Label>\n                      <Form.Control type=\"password\" name=\"password\" />\n                      <div className=\"sign-in-buttonGroup\">\n                      <Button type=\"submit\" variant=\"success\"> Concluir </Button>\n                      <Button type=\"button\" onClick={ () => setRedirect(true) }> Voltar </Button>\n                      </div>\n                  </Form>\n                 { showAlert && errAlert  }\n                </Container>\n                { redirect && <Redirect to=\"/movies\" /> }\n            </main>\n        );\n}","import React from 'react';\nimport './css/Credits.css';\n\nexport default function Credits () {\n        return (\n            <main className=\"credits\">\n              <h1> Movie Library </h1>\n              <section className=\"credits-article\">\n                  <h5> Obrigado por testar minha aplicação ❤</h5>\n                  <article>\n                      Aplicação completamente feita por Alan Albuquerque Ferreira Lopes. Esta aplicação faz parte de um projeto com intuíto didático, chama-se Trybe NW+!\n                      Resumidamente, Trybe NW+ é onde farei todos os projetos da Trybe desde o Módulo de Front-End.\n                  </article>\n              </section>\n              <nav className=\"credits-contact\">\n                  <span><a href=\"https://www.linkedin.com/in/alanalbuquerq/\" target=\"_blank\" rel=\"noreferrer\">\n                      <i className=\"fab fa-linkedin-in\" />\n                    </a></span>\n                  <span><a href=\"http://github.com/offpepe/\" target=\"_blank\" rel=\"noreferrer\">\n                      <i className=\"fab fa-github\" />\n                  </a></span>\n              </nav>\n            </main>\n        );\n}\n\n ","import React from 'react';\nimport './css/NotFound.css'\n\nexport default function NotFound () {\n    return (\n        <main className=\"not-found-main\">\n            <h1><i class=\"fas fa-times-circle\"></i></h1>\n            <h2> Caminho não encontrado :\\ </h2>\n            <h4> Isto ocorre normalmente quando está perdido, mas pode ser falha do programador! </h4>\n            <h6> Caso acredite que seja uma falha, <a href=\"https://www.linkedin.com/in/alanalbuquerq/\" target=\"_blank\" rel=\"noreferrer\" >dê o feedback aqui!</a> </h6>\n        </main>\n    );\n}","import React from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Login from '../pages/Login';\nimport MovieDetails from '../pages/MovieDetails';\nimport CreateMovie from '../pages/CreateMovie';\nimport Library from '../pages/Library';\nimport SignIn from '../pages/SignIn';\nimport Credits from '../pages/Credits';\nimport NotFound from '../pages/NotFound';\n\nexport default function Routes () {\n    return (\n        <Switch>\n            <Route exact path=\"/login\"><Login /></Route>\n            <Route exact path=\"/login/signIn\"><SignIn /></Route>\n            <Route exact path=\"/create\"><CreateMovie /></Route>\n            <Route exact path=\"/\"><Library /></Route>\n            <Route exact path=\"/:id\"><MovieDetails /></Route>\n            <Route exact path=\"/credits\"><Credits /></Route>\n            <Route><NotFound /></Route>\n        </Switch>\n    );\n}","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport UserProvider from './context/userProvider';\nimport MovieProvider from './context/movieProvider';\nimport Routes from './services/routes';\n\nexport default function App() {\n  return (\n    <UserProvider>\n      <MovieProvider>\n        <BrowserRouter>\n          <Routes />\n        </BrowserRouter>\n      </MovieProvider>\n    </UserProvider>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}