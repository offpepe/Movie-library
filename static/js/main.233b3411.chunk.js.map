{"version":3,"sources":["services/apiRequests.js","context/userContext.js","context/userProvider.js","context/movieContext.js","context/movieProvider.js","components/MovieCardPreview.jsx","pages/CreateMovie.js","pages/Login.js","components/MovieCard.jsx","components/LoginForm.jsx","components/UserCard.jsx","components/LibraryHeader.jsx","pages/Library.js","components/UpdateDetailsForm.jsx","components/MovieDetails.jsx","pages/MovieDetails.js","pages/SignIn.js","pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["global","fetch","require","login","setToken","email","password","a","method","headers","body","JSON","stringify","log","json","token","localStorage","setItem","createAccount","formData","create","response","getUserByEmail","rawUser","user","getMovies","setter","movies","createNewMovie","newMovie","title","subtitle","genre","releaseDate","rate","description","cover","createdBy","createdAt","FormData","append","rawResult","result","getMovieById","id","movie","updateMovie","updatedFields","rawResponse","deleteMovie","validateToken","userContext","createContext","UserProvider","children","useState","setEmail","value","Provider","movieContext","MovieProvider","movieList","setMovieList","MovieCard","setDispatch","submitNewMovie","alert","popOver","setPopOver","showAlert","setShowAlert","showInfo","setShowInfo","useEffect","setAlert","code","message","Alert","variant","onClose","dismissible","Heading","as","error","success","dispatchNewMovie","Card","style","width","className","Img","src","window","URL","createObjectURL","Body","Title","Subtitle","Text","Badge","pill","bg","onClick","fontSize","starCount","fluid","Button","Footer","CreateMovie","useContext","getItem","getUser","setNewMovie","dispatchCard","redirect","setRedirect","inputError","setInputError","setRate","movieGenres","fetchUser","userData","operation","setTimeout","date","Date","toLocaleDateString","Container","padding","textAlign","Form","onSubmit","ev","preventDefault","target","files","username","Label","Control","type","name","Select","map","max","min","onStarClick","height","to","Login","userEmail","userSetEmail","userPassword","userSetPassword","setRedicrect","logIn","e","p","Col","Group","controlId","placeholder","onChange","Row","Check","label","_id","alt","color","LoginForm","err","setErr","showErr","setShowErr","location","reload","FormGroup","margin","textDecoration","UserCard","loggout","emailHash","LibraryHeader","setUser","showCredits","handleShow","class","Dropdown","Toggle","Menu","clear","Offcanvas","show","placement","onHide","Header","closeButton","href","rel","Library","checkToken","length","Spinner","animation","UpdateDetailsForm","submitFormData","setDetails","rating","setRating","newTitle","newSubtitle","newGenre","newReleaseDate","newRate","newDescription","newCover","size","gen","MovieDetails","lastUpdate","showConfirmation","handleDelete","setConfirmation","showDelError","errorAlert","setDetailStatus","display","ListGroup","Item","getMovie","detailStatus","setErrorAlert","setShowDelErr","useParams","fetchApi","form","updated","setError","SignIn","errAlert","setErrAlert","paddingTop","insertedId","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.233b3411.chunk.js","sourcesContent":["global.fetch = require('cross-fetch');\n\n\nexport const login = async (setToken, email, password) => {\n    const log = await fetch('https://movie-library-api.herokuapp.com/users/login', {\n      method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password,\n        }),\n      });\n    const login = await log.json();\n    setToken(login.token);  \n    localStorage.setItem('token', login.token);\n    localStorage.setItem('email', email);\n    return login;\n  };\n\nexport const createAccount = async (formData) => {\n  const create = await fetch('https://movie-library-api.herokuapp.com/users/create', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(formData),\n  });\n  const response = await create.json();\n  return response;\n};\n\nexport const getUserByEmail = async (email) => {\n  const rawUser = await fetch(`https://movie-library-api.herokuapp.com/users/${email}`);\n  const user = await rawUser.json();\n  return user;\n};\n\nexport const getMovies = async (setter) => {\n  const { movies } = await (await fetch('https://movie-library-api.herokuapp.com/movies')).json();\n  setter(movies);\n};\n\nexport const createNewMovie = async (newMovie, token) => {\n    const { title, subtitle, genre, releaseDate, rate, description, cover, createdBy, createdAt } = newMovie;\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('subtitle', subtitle);\n    formData.append('genre', genre);\n    formData.append('releaseDate', releaseDate);\n    formData.append('rate', rate);\n    formData.append('description', description);\n    formData.append('createdAt', createdAt);\n    formData.append('createdBy', createdBy);\n    formData.append('cover', cover);\n    const rawResult = await fetch('https://movie-library-api.herokuapp.com/movies/create', {\n      method: 'POST',\n      headers: {\n        'Authorization': token,\n      },\n      body: formData,\n    });\n    const result = await rawResult.json();\n    return result;\n};\n\nexport const getMovieById = async (id, setter) => {\n  const movie = await (await fetch(`https://movie-library-api.herokuapp.com/movies/${id}`)).json();\n  setter(movie[0]);\n  return movie[0];\n};\n\nexport const updateMovie = async (id, token, updatedFields) => {\n  const rawResponse = await fetch(`https://movie-library-api.herokuapp.com/movies/update/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': token,\n    },\n    body: updatedFields,\n  });\n  const response = await rawResponse.json();\n  return response;\n};\n\nexport const deleteMovie = async (id, token) => {\n  const rawResponse = await fetch(`https://movie-library-api.herokuapp.com/movies/delete/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': token,\n    },\n  });\n  const response = await rawResponse.json();\n  return response;\n};\n\nexport const validateToken = async (token) => {\n  const rawResponse = await fetch(`https://movie-library-api.herokuapp.com/users/validate/${token}`);\n  const response = rawResponse.json();\n  return response;\n};","import { createContext } from 'react';\n\nconst userContext = createContext();\n\nexport default userContext;","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport userContext from './userContext';\n\nexport default function UserProvider ({ children }) {\n    const [email, setEmail] = useState('');\n    const [token, setToken] = useState('');\n    const value = {\n        email,\n        setEmail,\n        token,\n        setToken,\n    };\n    return (\n        <userContext.Provider value={ value } >\n            {\n                children\n            }\n        </userContext.Provider>   \n    );\n}\n\nUserProvider.propTypes = {\n    children: PropTypes.object.isRequired,\n}","import { createContext } from 'react';\n\nconst movieContext = createContext();\n\nexport default movieContext;","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport movieContext from './movieContext';\n\nexport default function MovieProvider ({ children }) {\n    const [movieList, setMovieList] = useState([]);  \n    const value = {\n        movieList,\n        setMovieList,\n    };\n    return (\n        <movieContext.Provider value={ value } >\n            {\n                children\n            }\n        </movieContext.Provider>   \n    );\n}\n\nMovieProvider.propTypes = {\n    children: PropTypes.object.isRequired,\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Button, Alert, Badge } from 'react-bootstrap';\nimport StarRatingComponent from 'react-star-rating-component';\n\n\nexport default function MovieCard({ movie, setDispatch, submitNewMovie, alert }) {\n  const [popOver, setPopOver] = useState()\n  const [showAlert, setShowAlert] = useState(false);\n  const [showInfo, setShowInfo] = useState(false);\n  const  { title, subtitle, genre, releaseDate, rate, description, cover, createdBy, createdAt } = movie;\n  useEffect(() => {\n    const setAlert = (response, code, message) => (\n      <Alert variant=\"danger\" onClose={ () => setShowAlert(false) } dismissible>\n        <Alert.Heading as=\"h3\">{ `${code} -> ${response}` }</Alert.Heading>\n        <p>\n          { message }\n        </p>\n      </Alert>\n    );\n    if(alert) {\n        setShowAlert(true);\n        if (alert.error) {\n          setPopOver(setAlert(alert.error, alert.code, alert.message));\n        } else if (alert.success) {\n          setPopOver(setAlert(alert.success, alert.code, alert.message));\n        }\n      }\n  }, [setPopOver, alert])\n  const dispatchNewMovie = async () => {\n    setPopOver('Loading...');\n    await submitNewMovie();\n  };\n\n  const toggleInfo = () => {\n    if (showInfo) {\n      setShowInfo(false);\n    } else {\n      setShowInfo(true);\n    }\n  }\n\n  return (\n      <Card style={ { width: '25rem' } } className=\"card-preview\">\n          <Card.Img\n            variant=\"top\"\n            src={ window.URL.createObjectURL(cover) }\n            className=\"card-preview-img\"\n            />\n          <Card.Body>\n              <Card.Title>{ title }</Card.Title>\n              <Card.Subtitle>{ subtitle }</Card.Subtitle>\n              <Card.Text>{ description }</Card.Text>\n              <Card.Body className=\"card-preview-info\">\n                <h4>\n                  <Badge pill bg=\"dark\">{ genre }</Badge>\n                </h4>\n                <i className=\"fas fa-question-circle\" onClick={ () => toggleInfo() } ></i>\n              </Card.Body>\n              <div style={ { fontSize: \"30px\"  } } >\n              <StarRatingComponent value={ rate } starCount={ 5 } />  \n              </div>\n              { showInfo && <div className=\"card-preview-more-info\">\n                <p> { `Data de Lançamento: ${releaseDate} `} </p>\n                <p> {`Filme adicionado por: ${ createdBy }`} </p>\n                <p> {`Adicionado em: ${ createdAt }` } </p>\n              </div> }\n          </Card.Body>\n          <Card.Body fluid=\"md\" className=\"card-preview-footer\">\n            <Button variant='success' onClick={ () => dispatchNewMovie() } > Adicionar </Button>\n            <Button variant='danger' onClick={ () => setDispatch() } > Cancelar </Button>\n          </Card.Body>\n          { showAlert && <Card.Footer className=\"card-preview-alert\">\n          { alert && popOver }\n          </Card.Footer> }\n      </Card>\n  );\n}\n\nMovieCard.propTypes = {\n  props: PropTypes.shape({\n    movie: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,    \n};","import React, { useContext, useEffect, useState } from 'react';\nimport { Container, Col as Row, Form, Button, Alert  } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport StarRatingComponent from 'react-star-rating-component';\nimport MovieCardPreview from '../components/MovieCardPreview';\nimport userContext from '../context/userContext';\nimport { createNewMovie, getUserByEmail } from '../services/apiRequests';\nimport './css/CreateMovie.css';\n\nexport default function CreateMovie () {\n    let { token, email } = useContext(userContext);\n    if (!token || !email) {\n      token = localStorage.getItem('token');\n      email = localStorage.getItem('email');\n    }\n    const [user, getUser] = useState({});\n    const [newMovie, setNewMovie] = useState({});\n    const [dispatchCard, setDispatch] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [alert, setAlert] = useState({});\n    const [inputError, setInputError] = useState(false);\n    const [rate, setRate] = useState(1);\n    const [movieGenres] = useState(['Animação', 'Comédia', 'Comédia Romântica', 'Ação', 'Policial', 'Documentário', 'Drama', 'Faroeste', 'Ficção Científica', 'Musical', 'Suspense', 'Terror / Horror']);\n    \n    useEffect(() => {\n      const fetchUser = async () => {\n        const userData = await getUserByEmail(email);\n        getUser(userData.result);\n      }\n      fetchUser();\n    },[email])\n    \n    const submitNewMovie = async () => {\n        const operation = await createNewMovie(newMovie, token);\n        setAlert(operation);\n        if(operation.success) {\n          setTimeout(() => setRedirect(true), 1000);\n        }\n    }\n\n    const closePreview = () => {\n        setDispatch(false);\n        setAlert({});\n    }\n\n    const date = new Date().toLocaleDateString(\"pt-BR\");\n\n    return (\n    <>\n      <Container className=\"create-movie-main\">\n        <div style={ { padding: '30px 0' } }>\n          <Row style={ { textAlign: 'center' } }>\n            <h1> Adicionar novo filme </h1>\n          </Row>\n          <Row className=\"create-movie-form\">\n              <Form onSubmit={ (ev) => {\n                  ev.preventDefault();\n                  const { title, subtitle, description, genre, releaseDate, rate, cover } = ev.target;\n                  if (!title.value || !subtitle.value || !genre.value || !releaseDate.value || !rate.value || !description.value || !cover.files[0]) {\n                      setInputError(true);\n                  } else {\n                  setNewMovie({\n                      title: title.value,\n                      subtitle: subtitle.value,\n                      genre: genre.value,\n                      releaseDate: releaseDate.value,\n                      rate: rate.value,\n                      description: description.value,\n                      cover: cover.files[0],\n                      createdBy: user.username,\n                      createdAt: date,\n                  });       \n                  setDispatch(true);\n                  }\n              } }>\n                  <Form.Label>\n                    <h4>Título</h4>\n                  </Form.Label>\n                  <Form.Control type=\"text\" name=\"title\"/>\n                  <Form.Label>\n                      <h4>Subtítulo</h4>\n                  </Form.Label>\n                  <Form.Control type=\"text\" name=\"subtitle\" />\n                  <Form.Label>\n                      <h4>Gênero</h4>\n                  </Form.Label>\n                  <Form.Select name=\"genre\">\n                    { movieGenres.map((genre) => <option value={ genre }>{ genre }</option>) }\n                  </Form.Select>\n                  <Form.Label>\n                      <h4>Data de lançamento</h4>\n                  </Form.Label>\n                  <Form.Control type=\"date\" name=\"releaseDate\" max={ date } min='1888-12-12' />\n                  <Form.Label> <h4>Avaliação</h4> </Form.Label>\n                  <Row style={ { fontSize: \"30px\" } }>\n                  <StarRatingComponent name=\"rate\" value={ rate } starCount={ 5 } onStarClick={ setRate } />\n                  </Row>\n                  <Form.Label>\n                  <h4>Descrição</h4>\n                  </Form.Label>\n                  <Form.Control as=\"textarea\" name=\"description\" style={{ height: '100px' }} />\n                  <Form.Label>\n                  <h4>Capa</h4>\n                  </Form.Label>\n                  <Form.Control type=\"file\" name=\"cover\" />\n                    <Button variant=\"secondary\" type=\"submit\"> Adicionar </Button>\n              </Form>\n          </Row>\n          { inputError  && <Alert variant=\"warning\" onClose={ () => setInputError   (false) } dismissible >\n              <Alert.Heading> Todos os campos precisam ser preenchidos </Alert.Heading>\n              </Alert>}\n        </div>\n      </Container>\n      { dispatchCard &&\n      <section className=\"card-preview-box\">\n         <MovieCardPreview\n           movie={ newMovie }\n           setDispatch={ closePreview }\n           submitNewMovie={ submitNewMovie }\n           alert={ alert } \n           />\n      </section>\n      }\n      { redirect && <Redirect to=\"/\" /> }\n    </> \n    );\n}","import React, { useContext, useState } from 'react';\nimport { Container, Row, Col, Form, Button, Alert  } from 'react-bootstrap';\nimport userContext from '../context/userContext';\nimport { login } from '../services/apiRequests';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport default function Login () {\n    const [userEmail, userSetEmail] = useState('');\n    const [userPassword, userSetPassword] = useState('');\n    const [showAlert, setShowAlert] = useState(false);\n    const [alert, setAlert] = useState(<p> atenção: </p>);\n    const [redirect, setRedicrect] = useState(false); \n    const { setEmail, setToken } = useContext(userContext);\n\n    const logIn = async (e, p) => {\n      const log = await login(setToken, e, p);\n      if (log.error) {\n        setAlert(<Alert variant=\"danger\">\n            <h3>Erro: { log.error }</h3>\n            <p>Código: { log.code }</p>\n            <p>Mensagem: { log.message }</p>\n        </Alert>);\n        setShowAlert(true);\n      }\n      if (log.success) {\n        setAlert(<Alert variant=\"success\">\n          <p> { log.message }</p>\n        </Alert>);\n        setShowAlert(true);\n        setEmail(e);\n        setRedicrect(true);\n      }\n      setTimeout(() => {\n        setShowAlert(false)\n      }, 3000);\n    }\n        return (\n            <main>\n              <Container>\n                  <Col>\n                      <h1> Movie Library </h1>\n                      <Form>\n                          <Form.Group controlId=\"userLogin\">\n                              <Form.Label>\n                                  E-mail\n                              </Form.Label>\n                              <Form.Control\n                                type=\"email\"\n                                placeholder=\"ada_love_1815@betrybe.com\"\n                                onChange={ (ev) => userSetEmail(ev.target.value) }\n                              />\n                              <Form.Label> Password </Form.Label>\n                              <Form.Control\n                                type=\"password\"\n                                placeholder=\"Senha\"\n                                onChange={ (ev) => userSetPassword(ev.target.value) }\n                                />\n                          </Form.Group>\n                      </Form>\n                  </Col>\n                  <Row>\n                      <Form.Check type=\"checkbox\" label=\"Mantenha-me logado\" />\n                      <Button\n                        variant=\"outline-primary\"\n                        type=\"button\"\n                        onClick={ () => logIn(userEmail, userPassword) }\n                      >\n                        Login\n                      </Button>\n                      <Link to=\"login/signIn\"><p>Não possuo uma conta :\\ </p></Link>\n                  </Row>                      \n              </Container>\n              { showAlert && alert }\n              { redirect && <Redirect to=\"/\" /> }\n            </main>\n        );\n    }\n\n// Login.propTypes = {\n\n// };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport StarRatingComponent from 'react-star-rating-component';\n\nexport default function MovieCard({ movie }) {\n  const  { _id: id, title, rate, genre, cover } = movie;\n  return (\n    <>\n    { movie && <div className=\"card movie-card\">\n      <figure>\n        <img src={ cover } alt={ `cover of ${title}` } />\n      </figure>\n        <div className=\"card-content movie-card-content\">\n      <Link to={ `/${id}` }>\n          <div className=\"movie-card-content-data\">\n            <h4 className=\"title\" style={ { color: 'rgb(207, 204, 204)' } }>{ title }</h4>\n            <h6>{ genre }</h6>\n            <div>\n              <StarRatingComponent starCount={ rate } value={ rate } />\n            </div>\n          </div>\n      </Link>\n        </div>\n      </div> }\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  props: PropTypes.shape({\n    movie: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,    \n};","import React, { useState } from 'react';\nimport { Form, FormGroup, Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { login } from '../services/apiRequests';\n\nexport default function LoginForm ({ setToken, setEmail })  {\n  const [err, setErr] = useState({});\n  const [showErr, setShowErr] = useState(false);\n  \n  return (\n    <Form className=\"login-form\" onSubmit={ async (ev) => {\n      ev.preventDefault();\n      const { email, password } = ev.target;\n      const log = await login(setToken, email.value, password.value);\n      if (log.error) {\n        setErr(log);\n        setShowErr(true);\n      } else {\n        setEmail(email);\n        window.location.reload();\n      }\n      } }>\n        <FormGroup className=\"login-form-group\" style={ { margin: '10px 0' } } >\n        <p className=\"control has-icons-left has-icons-right\">\n         <Form.Control className=\"input\" type=\"email\" name=\"email\" placeholder=\"adalovelance@betrybe.com\" />\n         <span className=\"icon is-small is-left\">\n           <i className=\"fas fa-envelope\"></i>\n         </span>\n        <p style={ { fontSize: '10px', margin: '3px' } }><Link to=\"/signIn\" style={ { textDecoration: 'none' } }>Não possui conta? Clique aqui! </Link></p>\n        </p>\n        <p className=\"control has-icons-left has-icons-right\">\n         <Form.Control className=\"input\" type=\"password\" name=\"password\" placeholder=\"Your password\" />\n         <span className=\"icon is-small is-left\">\n          <i className=\"fas fa-lock\"></i>\n         </span>\n         <p style={ { fontSize: '10px', margin: '3px'  } }><Link to=\"/reset\" style={ { textDecoration: 'none' } }> Esqueci minha senha </Link></p>\n        </p>\n        <span className=\"form-button-box\">\n        <Button variant=\"success\" type=\"submit\"> Logar </Button>\n        </span>\n        <div>\n        { showErr && <Alert\n        variant=\"danger\"\n        onClose={ () => setShowErr(false) }\n        style={ { width: '100%',\n          textAlign: 'center',\n         } }\n        dismissible\n        >\n          <Alert.Heading>{ `Erro ${err.code}` }</Alert.Heading>\n          <Alert.Heading>{ err.error }</Alert.Heading>\n          <p> { err.message } </p>\n        </Alert>}\n        </div>\n        </FormGroup>\n      </Form>\n    );\n}\n\nLoginForm.propTypes = {\n\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nexport default function UserCard ({ user, loggout }) {\n    return (\n    \n          <div className=\"card user-card\">\n              <figure className=\"image is-128x128\">\n                  <img src={ `https://www.gravatar.com/avatar/${user.emailHash}` } title=\"avatar provided by Gravatar\" alt=\"From Gravatar\" />\n              </figure>\n            <div className=\"card-content\" >\n             <h3 className=\"title is-5\" >{ user.username }</h3>\n             <p  className=\"title is-6\">{ user.email }</p>\n            </div>\n          <footer className=\"card-footer\">\n            <Button onClick={ () => loggout() } className=\"card-footer-item\" variant=\"danger\"> Sair </Button>\n          </footer>\n          </div>\n    );\n  }\n\nUserCard.propTypes = {\n  user: PropTypes.objectOf(PropTypes.string).isRequired,\n};","import React, { useContext, useEffect, useState } from 'react';\nimport { Dropdown, Offcanvas } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport userContext from '../context/userContext';\nimport { getUserByEmail } from '../services/apiRequests';\nimport LoginForm from './LoginForm';\nimport UserCard from './UserCard';\n\nexport default function LibraryHeader () {\n  let { email, setToken, setEmail } = useContext(userContext);\n  const [user, setUser] = useState({});\n  const [showCredits, handleShow] = useState(false);\n  useEffect(() => {\n    const fetchUser = async () => {\n      const userData = await getUserByEmail(email);\n      setUser(userData.result);\n    }\n    fetchUser();\n  },[email]);\n  const loggout = () => {\n    setToken('');\n    setEmail('');\n    localStorage.clear();\n  };\n\n    return (\n        <header className=\"library-header\">\n            <div className=\"logo-conteiner\" style={ { color: 'yellow', fontSize: '30px' } }>\n                <i className=\"fas fa-play\" />\n            </div>\n            <div style={ { color: 'white' } } >\n                <h1> Movie Library </h1>\n            </div>\n            <nav className=\"button-group\">\n                { email && <Link to=\"/create\" style={ { textDecoration: 'none' } } >\n                  <h5 style={ { color: 'white' } }><i class=\"fas fa-plus\"/></h5>\n                </Link> }\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                    <h5 style={ { color: 'white' } }><i className=\"fas fa-user-circle\"/></h5>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu className=\"userMenu\">\n                { email && user ? <UserCard user={ user } loggout={ loggout } /> : <LoginForm setToken={ setToken } setEmail={ setEmail } /> }\n                  </Dropdown.Menu>\n                  </Dropdown> \n                  <h5 onClick={ () => handleShow(true) } style={ { color: 'white', fontSize: '40px' } }><i className=\"fas fa-info-circle\"></i></h5>\n\n                  <Offcanvas variant=\"danger\" className=\"credit-canva\" show={ showCredits } placement=\"end\" onHide={ handleShow } >\n                    <Offcanvas.Header closeButton >\n                      <Offcanvas.Title> Creditos </Offcanvas.Title>\n                      </Offcanvas.Header>\n                    <Offcanvas.Body>\n                    <h5 style={ { margin: '30px 0' } }> Obrigado por testar minha aplicação ❤ </h5>\n                    <p style={ { textAlign: 'justify' } } >\n                      Aplicação completamente feita por Alan Albuquerque Ferreira Lopes. Esta aplicação faz parte de um projeto com intuíto didático, chama-se Trybe NW+!<br/>\n                      Resumidamente, Trybe NW+ é onde farei todos os projetos da Trybe desde o Módulo de Front-End.</p>\n                      <nav className=\"credits-footer\">\n                        <span><a href=\"https://www.linkedin.com/in/alanalbuquerq/\" target=\"_blank\" rel=\"noreferrer\">\n                          <i className=\"fab fa-linkedin-in\" />\n                          </a></span>\n                          <span><a href=\"http://github.com/offpepe/\" target=\"_blank\" rel=\"noreferrer\">\n                              <i className=\"fab fa-github\" />\n                          </a></span>\n                      </nav>\n                    </Offcanvas.Body>\n                  </Offcanvas>\n            </nav>\n        </header>\n    );\n}","import React, { useContext, useEffect } from 'react';\nimport { Container, Spinner } from 'react-bootstrap';\nimport movieContext from '../context/movieContext';\nimport { getMovies, validateToken } from '../services/apiRequests';\nimport MovieCard from '../components/MovieCard';\nimport './css/Library.css';\nimport LibraryHeader from '../components/LibraryHeader';\nimport userContext from '../context/userContext';\n\nexport default function Library () {\n    const { setToken, setEmail } = useContext(userContext);\n    const { movieList, setMovieList } = useContext(movieContext);\n    useEffect(() => {\n      const token = localStorage.getItem('token');\n      const email = localStorage.getItem('email');\n      const loggout = () => {\n        setToken();\n        setEmail();\n        localStorage.clear();\n        window.location.reload();\n      };\n      const checkToken = async () => {\n       const response = await validateToken(token);\n       if(!response.success) {\n        loggout();\n       } else {\n         setToken(token);\n         setEmail(email);\n       }\n      }\n      if(token) {\n        checkToken();\n      }\n      getMovies(setMovieList);\n    },[setEmail, setMovieList, setToken]);\n    return (\n      <>\n        <LibraryHeader />\n        <Container>\n          { movieList && movieList.length > 0 ? <div className=\"movie-card-group\">\n             { movieList.map((movie) => <MovieCard movie={ movie } />)}\n          </div>\n        :  <div className=\"spinner-box\" > <Spinner style={ { width: '8rem', height: '8rem' } } variant=\"danger\" animation=\"border\" /> </div> } \n        </Container>\n      </>\n      );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport StarRatingComponent from 'react-star-rating-component';\n\nexport default function UpdateDetailsForm ({ submitFormData, setDetails, setAlert, movie: { title, subtitle, genre, releaseDate, rate, description } }) {\n  const [movieGenres] = useState(['Animação', 'Comédia', 'Comédia Romântica', 'Documentário', 'Drama', 'Faroeste', 'Ficção Científica', 'Musical', 'Suspense', 'Terror / Horror']);\n  const [rating, setRating] = useState(rate);\n\n  const date = new Date().toLocaleDateString(\"pt-BR\");\n\n  return (\n    <Container className=\"update-container\" >\n      <Form onSubmit={ (ev) => {\n        ev.preventDefault();\n        const { newTitle, newSubtitle, newGenre, newReleaseDate, newRate, newDescription, newCover } = ev.target;\n        const formData = new FormData();\n        formData.append('title', newTitle.value);\n        formData.append('subtitle', newSubtitle.value);\n        formData.append('genre', newGenre.value);\n        formData.append('releaseDate', newReleaseDate.value);\n        formData.append('rate', (newRate.value ? newRate.value : rate));\n        formData.append('description', newDescription.value);\n        formData.append('cover', newCover.files[0]);\n        formData.append('lastUpdate', date);\n        submitFormData(formData);\n      } } className=\"update-form\" >\n          <Form.Label>\n            <h3>Título</h3>\n          </Form.Label>\n            <Form.Control type=\"text\" name=\"newTitle\" value={ title } size=\"lg\" />\n          <Form.Label >\n              <h3>Subtítulo</h3>\n          </Form.Label>\n          <Form.Control type=\"text\" name=\"newSubtitle\" value={ subtitle } size=\"lg\" />\n          <Form.Label>\n            <h3> Gênero </h3>\n          </Form.Label>\n          <Form.Select name=\"newGenre\" value={ genre }>\n            { movieGenres.map((gen) => <option value={ gen }>{ gen }</option>) }\n          </Form.Select>\n          <Form.Label>\n            <h3> Data de lançamento </h3>\n          </Form.Label>\n          <Form.Control type=\"date\" name=\"newReleaseDate\" max={ date } min='1888-12-12' />\n          <Form.Label>\n            <h3>Avaliação</h3>\n          </Form.Label>\n          <div>\n          <StarRatingComponent name=\"newRate\" value={ rating } starCount={ 5 } onStarClick={ setRating } />\n          </div>\n          <Form.Label>\n              <h3>Descrição</h3>\n          </Form.Label>\n            <Form.Control as=\"textarea\" name=\"newDescription\" style={{ height: '100px' }} value={ description } />\n          <Form.Label>\n              <h3>Capa</h3>\n          </Form.Label>\n            <Form.Control type=\"file\" name=\"newCover\" size=\"lg\" />\n        <div className=\"update-btn\">\n          <Button variant=\"info\" type=\"submit\" size=\"lg\" >\n            Confirmar \n          </Button>\n          <Button variant=\"danger\" onClick={ () => {\n              setDetails('show')\n              setAlert(false);\n          } } size=\"lg\" >\n            Cancelar\n          </Button>\n        </div>\n      </Form>\n    </Container>      \n  );\n}\n\nUpdateDetailsForm.propTypes = {\n  props: PropTypes.shape({\n    submitFormData: PropTypes.func,\n    setDetails: PropTypes.func,\n    setAlert: PropTypes.func,\n  }).isRequired,\n};","import React, { useEffect, useState } from 'react';\nimport { Badge, Card, ListGroup, Button } from 'react-bootstrap';\nimport { getUserByEmail } from '../services/apiRequests';\nimport StarRatingComponent from 'react-star-rating-component';\nimport PropTypes from 'prop-types';\n\nexport default function MovieDetails ({ movie: { \n    title,\n    subtitle,\n    description,\n    rate,\n    releaseDate,\n    genre,\n    createdBy,\n    createdAt,\n    lastUpdate,\n    cover  },\n    showConfirmation,\n    email,\n    handleDelete,\n    setConfirmation,\n    showDelError,\n    errorAlert,\n    setDetailStatus\n     },) {\n      const [user, setUser] = useState({})\n      useEffect(() => {\n      const fetchUser = async () => {\n        const userData = await getUserByEmail(email);\n        setUser(userData.result);\n      };\n      fetchUser()\n    },[email])\n        return (\n            <>\n            <Card className=\"movie-details-info\">\n            <div style={ { display: 'flex' } }>\n              <img src={ cover } alt={ `Cover of movie ${title}` }  />\n            <section className=\"movie-details-movie-data\">\n              <Card.Title>{ title }</Card.Title>\n              <Card.Subtitle>{ subtitle }</Card.Subtitle>\n              <Card.Body>\n                <Card.Text>{ description }</Card.Text>\n              </Card.Body>\n              <ListGroup variant=\"info\">\n                <ListGroup.Item>{ `Data de lançamento: ${releaseDate}` }</ListGroup.Item>\n                <ListGroup.Item><h3><StarRatingComponent starCount={ rate } value={ rate } /></h3></ListGroup.Item>\n                <ListGroup.Item>{ lastUpdate ? `Ultima atualização: ${lastUpdate}` : `Postado em: ${createdAt}` }</ListGroup.Item>\n                <ListGroup.Item>{ `Criado por: ${createdBy}` }</ListGroup.Item>\n                <ListGroup.Item><h4><Badge pill variant=\"dark\">{ genre }</Badge></h4></ListGroup.Item>\n                { user && user.username === createdBy && <ListGroup.Item>\n                  <Button style={ { margin: '0 5px' } } variant=\"outline-primary\" size=\"lg\" onClick={ () => setDetailStatus('update') }>\n                  <i class=\"far fa-edit\"></i>\n                  </Button>\n                  <Button style={ { margin: '0 5px' } } onClick={ () => setConfirmation(true) } variant=\"outline-danger\" size=\"lg\">\n                  <i class=\"far fa-trash-alt\"></i>\n                  </Button>\n                </ListGroup.Item>\n                }\n              </ListGroup>\n              { showConfirmation &&\n                <section className=\"delete-box\" >\n                  <Card className=\"delete-card\" >\n                  <Card.Header className=\"delete-card-header\">\n                  <Card.Title> Está certo em deletar este filme? </Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                  <Card.Subtitle> Esta operação é irreversível! </Card.Subtitle>\n                  </Card.Body>\n                  { <Card.Footer className=\"delete-card-footer\">\n                    <Button onClick={ () => handleDelete() } variant=\"danger\"> Sim </Button>\n                    <Button onClick={ () => setConfirmation(false) }  variant=\"info\"> Não </Button>\n                  </Card.Footer>}\n                  { showDelError && errorAlert }\n              </Card> \n            </section>}\n            </section>\n            </div>\n            </Card>\n            </>\n        );\n}\n\nMovieDetails.propTypes = {\n  props: PropTypes.shape({\n    movie: PropTypes.objectOf(PropTypes.string),\n    cover: PropTypes.object,\n    showConfirmation: PropTypes.func,\n    email: PropTypes.string,\n    handleDelete: PropTypes.func,\n    setConfirmation: PropTypes.func,\n    showDelError: PropTypes.func,\n    errorAlert: PropTypes.func,\n    setDetailStatus: PropTypes.func,\n    }).isRequired,    \n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Alert, Spinner } from 'react-bootstrap'; \nimport { useParams, Redirect } from 'react-router-dom'\nimport UpdateDetailsForm from '../components/UpdateDetailsForm';\nimport userContext from '../context/userContext';\nimport MovieDetailsComponent from '../components/MovieDetails';\nimport { deleteMovie, getMovieById, updateMovie } from '../services/apiRequests';\nimport './css/MovieDetails.css';\n\nexport default function MovieDetails () {\n    let { token, email } = useContext(userContext);\n    if (!token) {\n      token = localStorage.getItem('token');\n      email = localStorage.getItem('email');\n    }\n    const [movie, getMovie] = useState({});\n    const [detailStatus, setDetailStatus] = useState('show')\n    const [showAlert, setShowAlert] = useState(false);\n    const [showConfirmation, setConfirmation] = useState(false)\n    const [errorAlert, setErrorAlert] = useState(<></>);\n    const [showDelError, setShowDelErr] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const { id }= useParams();\n    useEffect(() => {\n      const fetchApi = async () => await getMovieById(id, getMovie); \n      fetchApi();\n    },[id]);\n    const setAlert = (response, code, message) => (\n      <div className=\"error-popup\">\n        <Alert variant=\"danger\" onClose={ () => setShowAlert(false) } dismissible>\n          <Alert.Heading as=\"h3\">{ `${code} -> ${response}` }</Alert.Heading>\n          <p>\n            { message }\n          </p>\n        </Alert>\n      </div>\n      );\n\n      const setDelAlert = (response, code, message) => (\n        <Alert variant=\"danger\" onClose={ () => setShowDelErr(false) } dismissible>\n          <Alert.Heading as=\"h3\">{ `${code} -> ${response}` }</Alert.Heading>\n          <p>\n            { message }\n          </p>\n        </Alert>\n      );\n      \n    const submitFormData = async (form) => {\n      const updated = await updateMovie(id, token, form);\n      if(updated.success) {\n        getMovie(updated.result);\n        setDetailStatus('show');\n      }\n      if(updated.error) {\n        setErrorAlert(setAlert(updated.error, updated.code, updated.message));\n          setShowAlert(true);\n      }\n    }\n\n    const handleDelete = async () => {\n      const operation = await deleteMovie(id, token);\n      if (operation.error) {\n        setErrorAlert(setDelAlert(operation.error, operation.code, operation.message));\n        setShowDelErr(true);\n      } else {\n        setErrorAlert(<Alert variant=\"success\">{ operation.success }</Alert>)\n        setShowDelErr(true);\n        setTimeout(() => setRedirect(true), 400);\n      }\n    }\n\n    return (\n      <>\n      { movie ?  \n        <main className=\"details-main\">\n        { detailStatus === 'show' ? <>\n          <main className=\"movie-details\">\n            <MovieDetailsComponent\n              movie={ movie }\n              showConfirmation={ showConfirmation }\n              email={ email }\n              handleDelete={ handleDelete }\n              setConfirmation={ setConfirmation }\n              showDelError={ showDelError }\n              errorAlert={ errorAlert }\n              setDetailStatus={ setDetailStatus }\n              />\n          </main>\n            </>: <UpdateDetailsForm\n              submitFormData={ submitFormData }\n              setDetails={ setDetailStatus }\n              setAlert={ setShowAlert }\n              setError={ setErrorAlert }\n              movie={ movie }\n              /> }\n            { showAlert && errorAlert }\n            { redirect && <Redirect to=\"/\" /> }\n        </main> :  <div className=\"spinner-box\" > <Spinner style={ { width: '8rem', height: '8rem' } } variant=\"danger\" animation=\"border\" /> </div> }\n      </>\n        );\n}\n","import React, { useState } from 'react';\nimport { Button, Container, Form, Alert } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport { createAccount } from '../services/apiRequests';\nimport './css/SignIn.css';\n\nexport default function SignIn () {\n    const [redirect, setRedirect] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [errAlert, setErrAlert] = useState(<></>);\n\n    const setAlert = (response, code, message) => (\n        <Alert variant=\"danger\" onClose={ () => setShowAlert(false) } dismissible>\n          <Alert.Heading as=\"h3\">{ `${code} -> ${response}` }</Alert.Heading>\n          <p>\n            { message }\n          </p>\n        </Alert>\n      );\n        return (\n            <main className=\"sign-in-main\">\n                <Container className=\"sign-in-conteiner\" style={ { paddingTop: \"20px\" } }>\n                  <h1 style={ { textAlign: \"center\" } }> Criar usuário </h1>\n                  <Form onSubmit={ async (ev) => {\n                      ev.preventDefault();\n                      const { email, username, type, password } = ev.target;\n                      if (!email.value || !username.value || !type.value || !password.value) {\n                          alert('todos os campos precisam ser preenchidos');\n                      } else {\n                          const formData = {\n                            email: email.value,\n                            username: username.value,\n                            type: type.value,\n                            password: password.value,\n                          };\n                          const response = await createAccount(formData);\n                          if (response.error) {\n                            setErrAlert(setAlert(response.error, response.code, response.message));\n                            setShowAlert(true);\n                          } else {\n                            setErrAlert(\n                            <Alert variant=\"success\" onClose={ () => setShowAlert(false) }>\n                             <Alert.Heading>\n                                { response.success }\n                             </Alert.Heading>\n                             { `Id de criação: ${response.insertedId}` }\n                            </Alert>);\n                            setShowAlert(true);\n                            setTimeout(() => setRedirect(true), 500);\n                          }\n                      }\n                  } }>\n                      <Form.Label> <h5>E-mail</h5> </Form.Label>\n                      <Form.Control type=\"email\" name=\"email\" placeholder=\"linus_torvalds@windowsucks.gnu.com\"  />\n                      <Form.Label> <h5>Nome de usuário</h5> </Form.Label>\n                      <Form.Control type=\"text\" name=\"username\" placeholder=\"linus_gate_killer_69\" />\n                      <Form.Label> <h5>Tipo</h5> </Form.Label>\n                      <Form.Select name=\"type\">\n                      <option value=\"reader\"> Leitor </option>\n                      <option value=\"creator\"> Criador </option>\n                      <option value=\"admin\"> Administrador </option>\n                      </Form.Select>\n                      <Form.Label> <h5>Senha</h5> </Form.Label>\n                      <Form.Control type=\"password\" name=\"password\" />\n                      <div className=\"sign-in-buttonGroup\">\n                      <Button type=\"submit\" variant=\"success\"> Concluir </Button>\n                      <Button type=\"button\" onClick={ () => setRedirect(true) }> Voltar </Button>\n                      </div>\n                  </Form>\n                 { showAlert && errAlert  }\n                </Container>\n                { redirect && <Redirect to=\"/\" /> }\n            </main>\n        );\n}","import React from 'react';\nimport './css/NotFound.css'\n\nexport default function NotFound () {\n    return (\n        <main className=\"not-found-main\">\n            <h1><i class=\"fas fa-times-circle\"></i></h1>\n            <h2> Caminho não encontrado :\\ </h2>\n            <h4> Isto ocorre normalmente quando está perdido, mas pode ser falha do programador! </h4>\n            <h6> Caso acredite que seja uma falha, <a href=\"https://www.linkedin.com/in/alanalbuquerq/\" target=\"_blank\" rel=\"noreferrer\" >dê o feedback aqui!</a> </h6>\n        </main>\n    );\n}","import React from 'react';\nimport CreateMovie from './pages/CreateMovie';\nimport Login from './pages/Login';\nimport Library from './pages/Library';\nimport MovieDetails from './pages/MovieDetails';\nimport SignIn from './pages/SignIn';\nimport NotFound from './pages/NotFound';\nimport { Route, Switch } from 'react-router';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\"><Library /></Route>\n      <Route exact path=\"/login\"><Login /></Route>\n      <Route exact path=\"/signIn\"><SignIn /></Route>\n      <Route exact path=\"/create\"><CreateMovie /></Route>\n      <Route exact path=\"/:id\"><MovieDetails /></Route>\n      <Route path=\"*\" exact ><NotFound/></Route>\n    </Switch>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport UserProvider from './context/userProvider';\nimport MovieProvider from './context/movieProvider';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <UserProvider>\n    <MovieProvider>\n     <BrowserRouter basename={process.env.PUBLIC_URL} >\n       <App />\n      </BrowserRouter>\n    </MovieProvider>\n  </UserProvider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}